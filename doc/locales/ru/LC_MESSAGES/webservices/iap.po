# SOME DESCRIPTIVE TITLE.
# Copyright (C) Odoo S.A.
# This file is distributed under the same license as the odoo package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: odoo 13.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-01-07 15:02+0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../webservices/iap.rst:42
msgid "In-App Purchase"
msgstr ""

#: ../../webservices/iap.rst:44
msgid ""
"In-App Purchase (IAP) allows providers of ongoing services through Odoo "
"apps to be compensated for ongoing service use rather than — and possibly"
" instead of — a sole initial purchase."
msgstr ""

#: ../../webservices/iap.rst:48
msgid ""
"In that context, Odoo acts mostly as a *broker* between a client and an "
"Odoo App Developer:"
msgstr ""

#: ../../webservices/iap.rst:51
msgid "Users purchase service tokens from Odoo."
msgstr ""

#: ../../webservices/iap.rst:52
msgid ""
"Service providers draw tokens from the user's Odoo account when service "
"is requested."
msgstr ""

#: ../../webservices/iap.rst:57
msgid ""
"This document is intended for *service providers* and presents the "
"latter, which can be done either via direct JSON-RPC2_ or if you are "
"using Odoo using the convenience helpers it provides."
msgstr ""

#: ../../webservices/iap.rst:62
msgid "Overview"
msgstr ""

#: ../../webservices/iap.rst:67
msgid "The Players"
msgstr ""

#: ../../webservices/iap.rst:69
msgid ""
"The Service Provider is (probably) you the reader, you will be providing "
"value to the client in the form of a service paid per-use."
msgstr ""

#: ../../webservices/iap.rst:71
msgid "The Client installed your Odoo App, and from there will request services."
msgstr ""

#: ../../webservices/iap.rst:72
msgid ""
"Odoo brokers crediting, the Client adds credit to their account, and you "
"can draw credits from there to provide services."
msgstr ""

#: ../../webservices/iap.rst:74
msgid ""
"The External Service is an optional player: *you* can either provide a "
"service directly, or you can delegate the actual service acting as a "
"bridge/translator between an Odoo system and the actual service."
msgstr ""

#: ../../webservices/iap.rst:82
msgid "The Credits"
msgstr ""

#: ../../webservices/iap.rst:84
msgid ""
"The credits went from integer to float value starting **October 2018**. "
"Integer values are still supported."
msgstr ""

#: ../../webservices/iap.rst:87
msgid ""
"Every service provided through the IAP platform can be used by the "
"clients with tokens or *credits*. The credits are an float unit and their"
" monetary value depends on the service and is decided by the provider. "
"This could be:"
msgstr ""

#: ../../webservices/iap.rst:92
msgid "for an sms service: 1 credit = 1 sms;"
msgstr ""

#: ../../webservices/iap.rst:93
msgid "for an ad service: 1 credit = 1 ad; or"
msgstr ""

#: ../../webservices/iap.rst:94
msgid "for a postage service: 1 credit = 1 post stamp."
msgstr ""

#: ../../webservices/iap.rst:96
msgid ""
"A credit can also simply be associated with a fixed amount of money to "
"palliate the variations of price (e.g. the prices of sms and stamps may "
"vary following the countries)."
msgstr ""

#: ../../webservices/iap.rst:100
msgid ""
"The value of the credits is fixed with the help of prepaid credit packs "
"that the clients can buy on https://iap.odoo.com (see :ref:`Packs <iap-"
"packages>`)."
msgstr ""

#: ../../webservices/iap.rst:103
msgid ""
"In the following explanations we will ignore the External Service, they "
"are just a detail of the service you provide."
msgstr ""

#: ../../webservices/iap.rst:109
msgid "'Normal' service flow"
msgstr ""

#: ../../webservices/iap.rst:111
msgid "If everything goes well, the normal flow is the following:"
msgstr ""

#: ../../webservices/iap.rst:113
msgid "The Client requests a service of some sort."
msgstr ""

#: ../../webservices/iap.rst:114
msgid ""
"The Service Provider asks Odoo if there are enough credits for the "
"service in the Client's account, and creates a transaction over that "
"amount."
msgstr ""

#: ../../webservices/iap.rst:117
msgid ""
"The Service Provider provides the service (either on their own or calling"
" to External Services)."
msgstr ""

#: ../../webservices/iap.rst:119
msgid ""
"The Service Provider goes back to Odoo to capture (if the service could "
"be provided) or cancel (if the service could not be provided) the "
"transaction created at step 2."
msgstr ""

#: ../../webservices/iap.rst:122
msgid ""
"Finally, the Service Provider notifies the Client that the service has "
"been rendered, possibly (depending on the service) displaying or storing "
"its results in the client's system."
msgstr ""

#: ../../webservices/iap.rst:129
msgid "Insufficient credits"
msgstr ""

#: ../../webservices/iap.rst:131
msgid ""
"However, if the Client's account lacks credits for the service, the flow "
"will be as follows:"
msgstr ""

#: ../../webservices/iap.rst:133
msgid "The Client requests a service as previously."
msgstr ""

#: ../../webservices/iap.rst:134
msgid ""
"The Service Provider asks Odoo if there are enough credits on the "
"Client's account and gets a negative reply."
msgstr ""

#: ../../webservices/iap.rst:136
msgid "This is signaled back to the Client."
msgstr ""

#: ../../webservices/iap.rst:137
msgid "Who is redirected to their Odoo account to credit it and re-try."
msgstr ""

#: ../../webservices/iap.rst:141
msgid "Building your service"
msgstr ""

#: ../../webservices/iap.rst:143
msgid ""
"For this example, the service we will provide is ~~mining dogecoins~~ "
"burning 10 seconds of CPU for a credit. For your own services, you could,"
" for example:"
msgstr ""

#: ../../webservices/iap.rst:146
msgid ""
"provide an online service yourself (e.g. convert quotations to faxes for "
"business in Japan);"
msgstr ""

#: ../../webservices/iap.rst:148
msgid ""
"provide an *offline* service yourself (e.g. provide accountancy service);"
" or"
msgstr ""

#: ../../webservices/iap.rst:149
msgid ""
"act as intermediary to an other service provider (e.g. bridge to an MMS "
"gateway)."
msgstr ""

#: ../../webservices/iap.rst:155
msgid "Register the service on Odoo"
msgstr ""

#: ../../webservices/iap.rst:161
msgid ""
"The first step is to register your service on the IAP endpoint "
"(production and/or test) before you can actually query user accounts. To "
"create a service, go to your *Portal Account* on the IAP endpoint "
"(https://iap.odoo.com for production, https://iap-sandbox.odoo.com for "
"testing, the endpoints are *independent* and *not synchronized*). "
"Alternatively, you can go to your portal on Odoo "
"(https://iap.odoo.com/my/home) and select *In-App Services*."
msgstr ""

#: ../../webservices/iap.rst:170
msgid ""
"On production, there is a manual validation step before the service can "
"be used to manage real transactions. This step is automatically passed "
"when on sandbox to ease the tests."
msgstr ""

#: ../../webservices/iap.rst:174
msgid ""
"Log in then go to :menuselection:`My Account --> Your In-App Services`, "
"click Create and provide the informations of your service."
msgstr ""

#: ../../webservices/iap.rst:178
msgid "The service has *seven* important fields:"
msgstr ""

#: ../../webservices/iap.rst:180
msgid ""
":samp:`name` - :class:`ServiceName`: This is the string you will need to "
"provide inside the client's :ref:`app <iap-odoo-app>` when requesting a "
"transaction from Odoo. (e.g. :class:`self.env['iap.account].get(name)`). "
"As good practice, this should match the technical name of your app."
msgstr ""

#: ../../webservices/iap.rst:185
msgid ""
":samp:`label` - :class:`Label`: The name displayed on the shopping portal"
" for the client."
msgstr ""

#: ../../webservices/iap.rst:190
msgid ""
"Both the :class:`ServiceName` and :class:`Label` are unique. As good "
"practice, the :class:`ServiceName` should usually match the name of your "
"Odoo Client App."
msgstr ""

#: ../../webservices/iap.rst:193
msgid ""
":samp:`icon` - :class:`Icon`: A generic icon that will serve as default "
"for your :ref:`packs <iap-packages>`."
msgstr ""

#: ../../webservices/iap.rst:196
msgid ""
":samp:`key` - :class:`ServiceKey`: The developer key that identifies you "
"in IAP (see :ref:`your service <iap-service>`) and allows to draw credits"
" from the client's account. It will be shown only once upon creation of "
"the service and can be regenerated at will."
msgstr ""

#: ../../webservices/iap.rst:202
msgid ""
"Your :class:`ServiceKey` *is a secret*, leaking your service key allows "
"other application developers to draw credits bought for your service(s)."
msgstr ""

#: ../../webservices/iap.rst:206
msgid ""
":samp:`trial credits` - :class:`Float`: This corresponds to the credits "
"you are ready to offer upon first use to your app users. Note that such "
"service will only be available to clients that have an active enterprise "
"contract."
msgstr ""

#: ../../webservices/iap.rst:210
msgid ""
":samp:`privacy policy` - :class:`PrivacyPolicy`: This is an url to the "
"privacy policy of your service. This should explicitly mention the "
"**information you collect**, how you **use it, its relevance** to make "
"your service work and inform the client on how they can **access, update "
"or delete their personal information**."
msgstr ""

#: ../../webservices/iap.rst:227
msgid ""
"You can then create *credit packs* which clients can purchase in order to"
" use your service."
msgstr ""

#: ../../webservices/iap.rst:233
msgid "Packs"
msgstr ""

#: ../../webservices/iap.rst:235
msgid "A credit pack is essentially a product with five characteristics:"
msgstr ""

#: ../../webservices/iap.rst:237
msgid "Name: name of the pack,"
msgstr ""

#: ../../webservices/iap.rst:238
msgid ""
"Icon: specific icon for the pack (if not provided, it will fallback on "
"the service icon),"
msgstr ""

#: ../../webservices/iap.rst:239
msgid ""
"Description: details on the pack that will appear on the shop page as "
"well as the invoice,"
msgstr ""

#: ../../webservices/iap.rst:241
msgid "Amount: amount of credits the client is entitled to when buying the pack,"
msgstr ""

#: ../../webservices/iap.rst:242
msgid "Price: price in EUR (for the time being, USD support is planned)."
msgstr ""

#: ../../webservices/iap.rst:246
#, python-format
msgid ""
"Odoo takes a 25% commission on all pack sales. Adjust your selling price "
"accordingly."
msgstr ""

#: ../../webservices/iap.rst:251
msgid ""
"Depending on the strategy, the price per credit may vary from one pack to"
" another."
msgstr ""

#: ../../webservices/iap.rst:261
msgid "Odoo App"
msgstr ""

#: ../../webservices/iap.rst:267
msgid ""
"The second step is to develop an `Odoo App`_ which clients can install in"
" their Odoo instance and through which they can *request* the services "
"you provide. Our app will just add a button to the Partners form which "
"lets a user request burning some CPU time on the server."
msgstr ""

#: ../../webservices/iap.rst:272
msgid ""
"First, we will create an *odoo module* depending on ``iap``. IAP is a "
"standard V11 module and the dependency ensures a local account is "
"properly set up and we will have access to some necessary views and "
"useful helpers."
msgstr ""

#: ../../webservices/iap.rst:278
msgid ""
"Second, the \"local\" side of the integration. Here we will only be "
"adding an action button to the partners view, but you can of course "
"provide significant local value via your application and additional parts"
" via a remote service."
msgstr ""

#: ../../webservices/iap.rst:287
msgid ""
"We can now implement the action method/callback. This will *call our own "
"server*."
msgstr ""

#: ../../webservices/iap.rst:290
msgid ""
"There are no requirements when it comes to the server or the "
"communication protocol between the app and our server, but ``iap`` "
"provides a :func:`~odoo.addons.iap.jsonrpc` helper to call a JSON-RPC2_ "
"endpoint on an other Odoo instance and transparently re-raise relevant "
"Odoo exceptions "
"(:class:`~odoo.addons.iap.models.iap.InsufficientCreditError`, "
":class:`odoo.exceptions.AccessError` and "
":class:`odoo.exceptions.UserError`)."
msgstr ""

#: ../../webservices/iap.rst:297
msgid "In that call, we will need to provide:"
msgstr ""

#: ../../webservices/iap.rst:299
msgid "any relevant client parameter (none here),"
msgstr ""

#: ../../webservices/iap.rst:300
msgid ""
"the :class:`token <UserToken>` of the current client that is provided by "
"the ``iap.account`` model's ``account_token`` field. You can retrieve the"
" account for your service by calling "
":samp:`env['iap.account'].get({service_name})` where :class:`service_name"
" <ServiceName>` is the name of the service registered on IAP endpoint."
msgstr ""

#: ../../webservices/iap.rst:310
msgid ""
"``iap`` automatically handles "
":class:`~odoo.addons.iap.models.iap.InsufficientCreditError` coming from "
"the action and prompts the user to add credits to their account."
msgstr ""

#: ../../webservices/iap.rst:314
msgid ""
":func:`~odoo.addons.iap.jsonrpc` takes care of re-raising "
":class:`~odoo.addons.iap.models.iap.InsufficientCreditError` for you."
msgstr ""

#: ../../webservices/iap.rst:319
msgid ""
"If you are not using :func:`~odoo.addons.iap.jsonrpc` you *must* be "
"careful to re-raise "
":class:`~odoo.addons.iap.models.iap.InsufficientCreditError` in your "
"handler otherwise the user will not be prompted to credit their account, "
"and the next call will fail the same way."
msgstr ""

#: ../../webservices/iap.rst:328
msgid "Service"
msgstr ""

#: ../../webservices/iap.rst:332
msgid ""
"Though that is not *required*, since ``iap`` provides both a client "
"helper for JSON-RPC2_ calls (:func:`~odoo.addons.iap.jsonrpc`) and a "
"service helper for transactions "
"(:class:`~odoo.addons.iap.models.iap.charge`) we will also be "
"implementing the service side as an Odoo module:"
msgstr ""

#: ../../webservices/iap.rst:339
msgid ""
"Since the query from the client comes as JSON-RPC2_ we will need the "
"corresponding controller which can call "
":class:`~odoo.addons.iap.models.iap.charge` and perform the service "
"within:"
msgstr ""

#: ../../webservices/iap.rst:350
msgid "The :class:`~odoo.addons.iap.models.iap.charge` helper will:"
msgstr ""

#: ../../webservices/iap.rst:352
msgid ""
"authorize (create) a transaction with the specified number of credits, if"
" the account does not have enough credits it will raise the relevant "
"error"
msgstr ""

#: ../../webservices/iap.rst:355
msgid "execute the body of the ``with`` statement"
msgstr ""

#: ../../webservices/iap.rst:356
msgid ""
"if the body of the ``with`` executes successfully, update the price of "
"the transaction if needed"
msgstr ""

#: ../../webservices/iap.rst:358
msgid "capture (confirm) the transaction"
msgstr ""

#: ../../webservices/iap.rst:359
msgid ""
"otherwise, if an error is raised from the body of the ``with``, cancel "
"the transaction (and release the hold on the credits)"
msgstr ""

#: ../../webservices/iap.rst:364
msgid ""
"By default, :class:`~odoo.addons.iap.models.iap.charge` contacts the "
"*production* IAP endpoint, https://iap.odoo.com. While developing and "
"testing your service you may want to point it towards the *development* "
"IAP endpoint https://iap-sandbox.odoo.com."
msgstr ""

#: ../../webservices/iap.rst:369
msgid ""
"To do so, set the ``iap.endpoint`` config parameter in your service Odoo:"
" in debug/developer mode, :menuselection:`Setting --> Technical --> "
"Parameters --> System Parameters`, just define an entry for the key "
"``iap.endpoint`` if none already exists)."
msgstr ""

#: ../../webservices/iap.rst:374
msgid ""
"The :class:`~odoo.addons.iap.models.iap.charge` helper has two additional"
" optional parameters we can use to make things clearer to the end-user."
msgstr ""

#: ../../webservices/iap.rst:379
msgid "``description``"
msgstr ""

#: ../../webservices/iap.rst:378
msgid ""
"is a message which will be associated with the transaction and will be "
"displayed in the user's dashboard, it is useful to remind the user why "
"the charge exists."
msgstr ""

#: ../../webservices/iap.rst:385
msgid "``credit_template``"
msgstr ""

#: ../../webservices/iap.rst:382
msgid ""
"is the name of a :ref:`reference/qweb` template which will be rendered "
"and shown to the user if their account has less credit available than the"
" service provider is requesting, its purpose is to tell your users why "
"they should be interested in your IAP offers."
msgstr ""

#: ../../webservices/iap.rst:393
msgid "JSON-RPC2_ Transaction API"
msgstr ""

#: ../../webservices/iap.rst:398
msgid ""
"The IAP transaction API does not require using Odoo when implementing "
"your server gateway, calls are standard JSON-RPC2_."
msgstr ""

#: ../../webservices/iap.rst:400
msgid ""
"Calls use different *endpoints* but the same *method* on all endpoints "
"(``call``)."
msgstr ""

#: ../../webservices/iap.rst:402
msgid ""
"Exceptions are returned as JSON-RPC2_ errors, the formal exception name "
"is available on ``data.name`` for programmatic manipulation."
msgstr ""

#: ../../webservices/iap.rst:406 ../../webservices/iap.rst:648
msgid "Authorize"
msgstr ""

#: ../../webservices/iap.rst:410
msgid ""
"Verifies that the user's account has at least as ``credit`` available "
"*and creates a hold (pending transaction) on that amount*."
msgstr ""

#: ../../webservices/iap.rst:413
msgid ""
"Any amount currently on hold by a pending transaction is considered "
"unavailable to further authorize calls."
msgstr ""

#: ../../webservices/iap.rst:416
msgid ""
"Returns a :class:`TransactionToken` identifying the pending transaction "
"which can be used to capture (confirm) or cancel said transaction."
msgstr ""

#: ../../webservices/iap.rst
msgid "Параметры"
msgstr ""

#: ../../webservices/iap.rst:422
msgid "optional, helps users identify the reason for charges on their account"
msgstr ""

#: ../../webservices/iap.rst:424
msgid ""
"optional, allows the user to benefit from trial credits if his database "
"is eligible (see :ref:`Service registration <register-service>`)"
msgstr ""

#: ../../webservices/iap.rst
msgid "Результат"
msgstr ""

#: ../../webservices/iap.rst:426
msgid ":class:`TransactionToken` if the authorization succeeded"
msgstr ""

#: ../../webservices/iap.rst
msgid "raises"
msgstr ""

#: ../../webservices/iap.rst:427
msgid ":class:`~odoo.exceptions.AccessError` if the service token is invalid"
msgstr ""

#: ../../webservices/iap.rst:428
msgid ""
":class:`~odoo.addons.iap.models.iap.InsufficientCreditError` if the "
"account does not have enough credits"
msgstr ""

#: ../../webservices/iap.rst:429
msgid "``TypeError`` if the ``credit`` value is not an integer or a float"
msgstr ""

#: ../../webservices/iap.rst:451 ../../webservices/iap.rst:727
msgid "Capture"
msgstr ""

#: ../../webservices/iap.rst:455
msgid ""
"Confirms the specified transaction, transferring the reserved credits "
"from the user's account to the service provider's."
msgstr ""

#: ../../webservices/iap.rst:458
msgid ""
"Capture calls are idempotent: performing capture calls on an already "
"captured transaction has no further effect."
msgstr ""

#: ../../webservices/iap.rst:463
msgid "optional parameter to capture a smaller amount of credits than authorized"
msgstr ""

#: ../../webservices/iap.rst:464 ../../webservices/iap.rst:496
msgid ":class:`~odoo.exceptions.AccessError`"
msgstr ""

#: ../../webservices/iap.rst:484 ../../webservices/iap.rst:689
msgid "Cancel"
msgstr ""

#: ../../webservices/iap.rst:488
msgid ""
"Cancels the specified transaction, releasing the hold on the user's "
"credits."
msgstr ""

#: ../../webservices/iap.rst:491
msgid ""
"Cancel calls are idempotent: performing capture calls on an already "
"cancelled transaction has no further effect."
msgstr ""

#: ../../webservices/iap.rst:514
msgid "Types"
msgstr ""

#: ../../webservices/iap.rst:516
msgid ""
"Exceptions aside, these are *abstract types* used for clarity, you should"
" not care how they are implemented."
msgstr ""

#: ../../webservices/iap.rst:521
msgid ""
"String identifying your service on https://iap.odoo.com (production) as "
"well as the account related to your service in the client's database."
msgstr ""

#: ../../webservices/iap.rst:526
msgid ""
"Identifier generated for the provider's service. Each key (and service) "
"matches a token of a fixed value, as generated by the service provide."
msgstr ""

#: ../../webservices/iap.rst:529
msgid ""
"Multiple types of tokens correspond to multiple services. As an exampe, "
"SMS and MMS could either be the same service (with an MMS being 'worth' "
"multiple SMS) or could be separate services at separate price points."
msgstr ""

#: ../../webservices/iap.rst:533
msgid ""
"Your service key *is a secret*, leaking your service key allows other "
"application developers to draw credits bought for your service(s)."
msgstr ""

#: ../../webservices/iap.rst:539
msgid "Identifier for a user account."
msgstr ""

#: ../../webservices/iap.rst:543
msgid ""
"Transaction identifier, returned by the authorization process and "
"consumed by either capturing or cancelling the transaction."
msgstr ""

#: ../../webservices/iap.rst:548
msgid ""
"Raised during transaction authorization if the credits requested are not "
"currently available on the account (either not enough credits or too many"
" pending transactions/existing holds)."
msgstr ""

#: ../../webservices/iap.rst:555
msgid "Raised by:"
msgstr ""

#: ../../webservices/iap.rst:557
msgid ""
"any operation to which a service token is required, if the service token "
"is invalid; or"
msgstr ""

#: ../../webservices/iap.rst:558
msgid ""
"any failure in an inter-server call. (typically, in "
":func:`~odoo.addons.iap.jsonrpc`)."
msgstr ""

#: ../../webservices/iap.rst:563
msgid ""
"Raised by any unexpected behaviour at the discretion of the App developer"
" (*you*)."
msgstr ""

#: ../../webservices/iap.rst:567
msgid "Test the API"
msgstr ""

#: ../../webservices/iap.rst:569
msgid ""
"In order to test the developped app, we propose a sandbox platform that "
"allows you to:"
msgstr ""

#: ../../webservices/iap.rst:571
msgid ""
"Test the whole flow from the client's point of view - Actual services and"
" transactions that can be consulted. (again this requires to change the "
"endpoint, see the danger note in :ref:`Service <iap-service>`)."
msgstr ""

#: ../../webservices/iap.rst:574
msgid "Test the API."
msgstr ""

#: ../../webservices/iap.rst:576
msgid ""
"The latter consists in specific tokens that will work on **IAP-Sandbox "
"only**."
msgstr ""

#: ../../webservices/iap.rst:578
msgid ""
"Token ``000000``: Represents a non-existing account. Returns an "
":class:`~odoo.addons.iap.models.iap.InsufficientCreditError` on authorize"
" attempt."
msgstr ""

#: ../../webservices/iap.rst:580
msgid ""
"Token ``000111``: Represents an account without sufficient credits to "
"perform any service. Returns an "
":class:`~odoo.addons.iap.models.iap.InsufficientCreditError` on authorize"
" attempt."
msgstr ""

#: ../../webservices/iap.rst:582
msgid ""
"Token ``111111``: Represents an account with enough credits to perform "
"any service. An authorize attempt will return a dummy transacion token "
"that is processed by the capture and cancel routes."
msgstr ""

#: ../../webservices/iap.rst:588
msgid "Those tokens are only active on the IAP-Sanbox server."
msgstr ""

#: ../../webservices/iap.rst:589
msgid ""
"The service key is completely ignored with this flow, If you want to run "
"a robust test of your service, you should ignore these tokens."
msgstr ""

#: ../../webservices/iap.rst:593
msgid "Odoo Helpers"
msgstr ""

#: ../../webservices/iap.rst:595
msgid ""
"For convenience, if you are implementing your service using Odoo the "
"``iap`` module provides a few helpers to make IAP flow even simpler."
msgstr ""

#: ../../webservices/iap.rst:601
msgid "Charging"
msgstr ""

#: ../../webservices/iap.rst:605
msgid ""
"A *context manager* for authorizing and automatically capturing or "
"cancelling transactions for use in the backend/proxy."
msgstr ""

#: ../../webservices/iap.rst:608
msgid "Works much like e.g. a cursor context manager:"
msgstr ""

#: ../../webservices/iap.rst:610
msgid "immediately authorizes a transaction with the specified parameters;"
msgstr ""

#: ../../webservices/iap.rst:611
msgid "executes the ``with`` body;"
msgstr ""

#: ../../webservices/iap.rst:612
msgid "if the body executes in full without error, captures the transaction;"
msgstr ""

#: ../../webservices/iap.rst:613
msgid "otherwise cancels it."
msgstr ""

#: ../../webservices/iap.rst:615 ../../webservices/iap.rst:654
#: ../../webservices/iap.rst:695 ../../webservices/iap.rst:733
msgid "used to retrieve the ``iap.endpoint`` configuration key"
msgstr ""

#: ../../webservices/iap.rst:652
msgid "Will authorize everything."
msgstr ""

#: ../../webservices/iap.rst:693
msgid "Will cancel an authorized transaction."
msgstr ""

#: ../../webservices/iap.rst:731
msgid "Will capture the amount ``credit`` on the given transaction."
msgstr ""

