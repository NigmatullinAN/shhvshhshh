# SOME DESCRIPTIVE TITLE.
# Copyright (C) Odoo S.A.
# This file is distributed under the same license as the odoo package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: odoo 13.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-01-07 15:02+0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../reference/orm.rst:7
msgid "ORM API"
msgstr ""

#: odoo.models:15 of
msgid "Object Relational Mapping module:"
msgstr ""

#: odoo.models:2 of
msgid "Hierarchical structure"
msgstr ""

#: odoo.models:3 of
msgid "Constraints consistency and validation"
msgstr ""

#: odoo.models:4 of
msgid "Object metadata depends on its status"
msgstr ""

#: odoo.models:5 of
msgid "Optimised processing by complex query (multiple actions at once)"
msgstr ""

#: odoo.models:6 of
msgid "Default field values"
msgstr ""

#: odoo.models:7 of
msgid "Permissions optimisation"
msgstr ""

#: odoo.models:8 of
msgid "Persistent object: DB postgresql"
msgstr ""

#: odoo.models:9 of
msgid "Data conversion"
msgstr ""

#: odoo.models:10 of
msgid "Multi-level caching system"
msgstr ""

#: odoo.models:11 of
msgid "Two different inheritance mechanisms"
msgstr ""

#: odoo.models:15 of
msgid "Rich set of field types:"
msgstr ""

#: odoo.models:13 of
msgid "classical (varchar, integer, boolean, ...)"
msgstr ""

#: odoo.models:14 of
msgid "relational (one2many, many2one, many2many)"
msgstr ""

#: odoo.models:15 of
msgid "functional"
msgstr ""

#: ../../reference/orm.rst:15
msgid "Models"
msgstr ""

#: ../../reference/orm.rst:17
msgid "Model fields are defined as attributes on the model itself::"
msgstr ""

#: ../../reference/orm.rst:25
msgid ""
"this means you cannot define a field and a method with the same name, the"
" last one will silently overwrite the former ones."
msgstr ""

#: ../../reference/orm.rst:28
msgid ""
"By default, the field's label (user-visible name) is a capitalized "
"version of the field name, this can be overridden with the ``string`` "
"parameter. ::"
msgstr ""

#: ../../reference/orm.rst:33
msgid ""
"For the list of field types and parameters, see :ref:`the fields "
"reference <reference/fields>`."
msgstr ""

#: ../../reference/orm.rst:36
msgid "Default values are defined as parameters on fields, either as a value::"
msgstr ""

#: ../../reference/orm.rst:40
msgid ""
"or as a function called to compute the default value, which should return"
" that value::"
msgstr ""

#: ../../reference/orm.rst:49
msgid "API"
msgstr ""

#: odoo.models.BaseModel:1 of
msgid "Base class for Odoo models."
msgstr ""

#: odoo.models.BaseModel:3 of
msgid "Odoo models are created by inheriting one of the following:"
msgstr ""

#: odoo.models.BaseModel:5 of
msgid ":class:`Model` for regular database-persisted models"
msgstr ""

#: odoo.models.BaseModel:7 of
msgid ""
":class:`TransientModel` for temporary data, stored in the database but "
"automatically vacuumed every so often"
msgstr ""

#: odoo.models.BaseModel:10 of
msgid ""
":class:`AbstractModel` for abstract super classes meant to be shared by "
"multiple inheriting models"
msgstr ""

#: odoo.models.BaseModel:13 of
msgid ""
"The system automatically instantiates every model once per database. "
"Those instances represent the available models on each database, and "
"depend on which modules are installed on that database. The actual class "
"of each instance is built from the Python classes that create and inherit"
" from the corresponding model."
msgstr ""

#: odoo.models.BaseModel:19 of
msgid ""
"Every model instance is a \"recordset\", i.e., an ordered collection of "
"records of the model. Recordsets are returned by methods like "
":meth:`~.browse`, :meth:`~.search`, or field accesses. Records have no "
"explicit representation: a record is represented as a recordset of one "
"record."
msgstr ""

#: odoo.models.BaseModel:25 of
msgid ""
"To create a class that should not be instantiated, the "
":attr:`~odoo.models.BaseModel._register` attribute may be set to False."
msgstr ""

#: odoo.models.BaseModel._auto:1 of
msgid ""
"Whether a database table should be created (default: ``True``). If set to"
" ``False``, override :meth:`~odoo.models.BaseModel.init` to create the "
"database table."
msgstr ""

#: odoo.models.BaseModel._auto:5 of
msgid ""
"To create a model without any table, inherit from "
":class:`~odoo.models.AbstractModel`."
msgstr ""

#: odoo.models.BaseModel._table:1 of
msgid "SQL table name used by model if :attr:`_auto`"
msgstr ""

#: odoo.models.BaseModel._sequence:1 of
msgid "SQL sequence to use for ID field"
msgstr ""

#: odoo.models.BaseModel._sql_constraints:1 of
msgid "SQL constraints [(name, sql_def, message)]"
msgstr ""

#: odoo.models.BaseModel._register:1 of
msgid "not visible in ORM registry"
msgstr ""

#: odoo.models.BaseModel._name:1 of
msgid "the model name (in dot-notation, module namespace)"
msgstr ""

#: odoo.models.BaseModel._description:1 of
msgid "the model's informal name"
msgstr ""

#: odoo.models.BaseModel._inherit:1 of
msgid "Python-inherited models:"
msgstr ""

#: ../../reference/orm.rst odoo.models.BaseModel._inherit of
msgid "type"
msgstr ""

#: odoo.models.BaseModel._inherit:3 of
msgid "str or list(str)"
msgstr ""

#: odoo.models.BaseModel._inherit:7 of
msgid "If :attr:`._name` is set, name(s) of parent models to inherit from"
msgstr ""

#: odoo.models.BaseModel._inherit:8 of
msgid "If :attr:`._name` is unset, name of a single model to extend in-place"
msgstr ""

#: odoo.models.BaseModel._inherits:1 of
msgid ""
"dictionary {'parent_model': 'm2o_field'} mapping the _name of the parent "
"business objects to the names of the corresponding foreign key fields to "
"use::"
msgstr ""

#: odoo.models.BaseModel._inherits:9 of
msgid ""
"implements composition-based inheritance: the new model exposes all the "
"fields of the inherited models but stores none of them: the values "
"themselves remain stored on the linked record."
msgstr ""

#: odoo.models.BaseModel._inherits:15 of
msgid ""
"if multiple fields with the same name are defined in the "
":attr:`~odoo.models.Model._inherits`-ed models, the inherited field will "
"correspond to the last one (in the inherits list order)."
msgstr ""

#: odoo.models.BaseModel._rec_name:1 of
msgid "field to use for labeling records, default: ``name``"
msgstr ""

#: odoo.models.BaseModel._order:1 of
msgid "default order field for searching results"
msgstr ""

#: odoo.models.BaseModel._check_company_auto:1 of
msgid ""
"On write and create, call ``_check_company`` to ensure companies "
"consistency on the relational fields having ``check_company=True`` as "
"attribute."
msgstr ""

#: odoo.models.BaseModel._parent_name:1 of
msgid "the many2one field used as parent field"
msgstr ""

#: odoo.models.BaseModel._parent_store:1 of
msgid "set to True to compute parent_path field."
msgstr ""

#: odoo.models.BaseModel._parent_store:3 of
msgid ""
"Alongside a :attr:`~.parent_path` field, sets up an indexed storage of "
"the tree structure of records, to enable faster hierarchical queries on "
"the records of the current model using the ``child_of`` and ``parent_of``"
" domain operators."
msgstr ""

#: odoo.models.BaseModel._abstract:1 of
msgid "whether model is abstract"
msgstr ""

#: ../../reference/orm.rst:75
msgid ":class:`odoo.models.AbstractModel`"
msgstr ""

#: odoo.models.BaseModel._transient:1 of
msgid "whether model is transient"
msgstr ""

#: ../../reference/orm.rst:79
msgid ":class:`odoo.models.TransientModel`"
msgstr ""

#: odoo.models.BaseModel._date_name:1 of
msgid "field to use for default calendar view"
msgstr ""

#: odoo.models.BaseModel._fold_name:1 of
msgid "field to determine folded groups in kanban views"
msgstr ""

#: ../../reference/orm.rst:85
msgid "AbstractModel"
msgstr ""

#: ../../reference/orm.rst:90
msgid "Model"
msgstr ""

#: odoo.models.Model:1 of
msgid "Main super-class for regular database-persisted Odoo models."
msgstr ""

#: odoo.models.Model:3 of
msgid "Odoo models are created by inheriting from this class::"
msgstr ""

#: odoo.models.Model:8 of
msgid ""
"The system will later instantiate the class once per database (on which "
"the class' module is installed)."
msgstr ""

#: ../../reference/orm.rst:95
msgid "TransientModel"
msgstr ""

#: odoo.models.TransientModel:1 of
msgid ""
"Model super-class for transient records, meant to be temporarily "
"persistent, and regularly vacuum-cleaned."
msgstr ""

#: odoo.models.TransientModel:4 of
msgid ""
"A TransientModel has a simplified access rights management, all users can"
" create new records, and may only access the records they created. The "
"superuser has unrestricted access to all TransientModel records."
msgstr ""

#: ../../reference/orm.rst:103
msgid "Fields"
msgstr ""

#: odoo.fields.Field:1 of
msgid ""
"The field descriptor contains the field definition, and manages accesses "
"and assignments of the corresponding field on records. The following "
"attributes may be provided when instanciating a field:"
msgstr ""

#: odoo.api.returns odoo.exceptions.RedirectWarning odoo.fields.Char
#: odoo.fields.Date.add odoo.fields.Date.context_today odoo.fields.Date.end_of
#: odoo.fields.Date.start_of odoo.fields.Date.subtract odoo.fields.Date.to_date
#: odoo.fields.Date.to_string odoo.fields.Datetime.add
#: odoo.fields.Datetime.context_timestamp odoo.fields.Datetime.end_of
#: odoo.fields.Datetime.start_of odoo.fields.Datetime.subtract
#: odoo.fields.Datetime.to_datetime odoo.fields.Datetime.to_string
#: odoo.fields.Field odoo.fields.Float odoo.fields.Many2many
#: odoo.fields.Many2one odoo.fields.Monetary odoo.fields.One2many
#: odoo.fields.Selection odoo.fields.Text odoo.models.Model.browse
#: odoo.models.Model.copy odoo.models.Model.create
#: odoo.models.Model.default_get odoo.models.Model.fields_get
#: odoo.models.Model.fields_view_get odoo.models.Model.filtered
#: odoo.models.Model.invalidate_cache odoo.models.Model.mapped
#: odoo.models.Model.name_create odoo.models.Model.name_search
#: odoo.models.Model.read odoo.models.Model.read_group odoo.models.Model.search
#: odoo.models.Model.sorted odoo.models.Model.with_env odoo.models.Model.write
#: of
msgid "Параметры"
msgstr ""

#: odoo.fields.Field:5 of
msgid ""
"the label of the field seen by users; if not set, the ORM takes the field"
" name in the class (capitalized)."
msgstr ""

#: odoo.fields.Field:8 of
msgid "the tooltip of the field seen by users"
msgstr ""

#: odoo.fields.Field:10 of
msgid ""
"whether the field is readonly (default: ``False``)  This only has an "
"impact on the UI. Any field assignation in code will work (if the field "
"is a stored field or an inversable one)."
msgstr ""

#: odoo.fields.Field:10 of
msgid "whether the field is readonly (default: ``False``)"
msgstr ""

#: odoo.fields.Field:12 of
msgid ""
"This only has an impact on the UI. Any field assignation in code will "
"work (if the field is a stored field or an inversable one)."
msgstr ""

#: odoo.fields.Field:15 of
msgid "whether the value of the field is required (default: ``False``)"
msgstr ""

#: odoo.fields.Field:17 of
msgid ""
"whether the field is indexed in database. Note: no effect on non-stored "
"and virtual fields. (default: ``False``)"
msgstr ""

#: odoo.fields.Field:20 of
msgid ""
"the default value for the field; this is either a static value, or a "
"function taking a recordset and returning a value; use ``default=None`` "
"to discard default values for the field"
msgstr ""

#: odoo.fields.Field:25 of
msgid ""
"a dictionary mapping state values to lists of UI attribute-value pairs; "
"possible attributes are: ``readonly``, ``required``, ``invisible``.  .. "
"warning:: Any state-based condition requires the ``state`` field value to"
" be     available on the client-side UI. This is typically done by "
"including it in     the relevant views, possibly made invisible if not "
"relevant for the     end-user."
msgstr ""

#: odoo.fields.Field:25 of
msgid ""
"a dictionary mapping state values to lists of UI attribute-value pairs; "
"possible attributes are: ``readonly``, ``required``, ``invisible``."
msgstr ""

#: odoo.fields.Field:28 of
msgid ""
"Any state-based condition requires the ``state`` field value to be "
"available on the client-side UI. This is typically done by including it "
"in the relevant views, possibly made invisible if not relevant for the "
"end-user."
msgstr ""

#: odoo.fields.Field:33 of
msgid ""
"comma-separated list of group xml ids (string); this restricts the field "
"access to the users of the given groups only"
msgstr ""

#: odoo.fields.Field:36 of
msgid ""
"whether the field value is dependent of the current company;  The value "
"isn't stored on the model table.  It is registered as `ir.property`. When"
" the value of the company_dependent field is needed, an `ir.property` is "
"searched, linked to the current company (and current record if one "
"property exists).  If the value is changed on the record, it either "
"modifies the existing property for the current record (if one exists), or"
" creates a new one for the current company and res_id.  If the value is "
"changed on the company side, it will impact all records on which the "
"value hasn't been changed."
msgstr ""

#: odoo.fields.Field:36 of
msgid "whether the field value is dependent of the current company;"
msgstr ""

#: odoo.fields.Field:38 of
msgid ""
"The value isn't stored on the model table.  It is registered as "
"`ir.property`. When the value of the company_dependent field is needed, "
"an `ir.property` is searched, linked to the current company (and current "
"record if one property exists)."
msgstr ""

#: odoo.fields.Field:43 of
msgid ""
"If the value is changed on the record, it either modifies the existing "
"property for the current record (if one exists), or creates a new one for"
" the current company and res_id."
msgstr ""

#: odoo.fields.Field:47 of
msgid ""
"If the value is changed on the company side, it will impact all records "
"on which the value hasn't been changed."
msgstr ""

#: odoo.fields.Field:50 of
msgid ""
"whether the field value should be copied when the record is duplicated "
"(default: ``True`` for normal fields, ``False`` for ``one2many`` and "
"computed fields, including property fields and related fields)"
msgstr ""

#: odoo.fields.Field:55 of
msgid ""
"whether the field is stored in database (default:``True``, ``False`` for "
"computed fields)"
msgstr ""

#: odoo.fields.Field:58 of
msgid ""
"aggregate function used by :meth:`~odoo.models.Model.read_group` when "
"grouping on this field.  Supported aggregate functions are:      * "
"``array_agg`` : values, including nulls, concatenated into an array     *"
" ``count`` : number of rows     * ``count_distinct`` : number of distinct"
" rows     * ``bool_and`` : true if all values are true, otherwise false"
"     * ``bool_or`` : true if at least one value is true, otherwise false"
"     * ``max`` : maximum value of all values     * ``min`` : minimum "
"value of all values     * ``avg`` : the average (arithmetic mean) of all "
"values     * ``sum`` : sum of all values"
msgstr ""

#: odoo.fields.Field:58 of
msgid ""
"aggregate function used by :meth:`~odoo.models.Model.read_group` when "
"grouping on this field."
msgstr ""

#: odoo.fields.Field:61 of
msgid "Supported aggregate functions are:"
msgstr ""

#: odoo.fields.Field:63 of
msgid "``array_agg`` : values, including nulls, concatenated into an array"
msgstr ""

#: odoo.fields.Field:64 of
msgid "``count`` : number of rows"
msgstr ""

#: odoo.fields.Field:65 of
msgid "``count_distinct`` : number of distinct rows"
msgstr ""

#: odoo.fields.Field:66 of
msgid "``bool_and`` : true if all values are true, otherwise false"
msgstr ""

#: odoo.fields.Field:67 of
msgid "``bool_or`` : true if at least one value is true, otherwise false"
msgstr ""

#: odoo.fields.Field:68 of
msgid "``max`` : maximum value of all values"
msgstr ""

#: odoo.fields.Field:69 of
msgid "``min`` : minimum value of all values"
msgstr ""

#: odoo.fields.Field:70 of
msgid "``avg`` : the average (arithmetic mean) of all values"
msgstr ""

#: odoo.fields.Field:71 of
msgid "``sum`` : sum of all values"
msgstr ""

#: ../../reference/orm.rst:215 odoo.fields.Field:74 of
msgid "Computed Fields"
msgstr ""

#: odoo.fields.Field:75 of
msgid ""
"name of a method that computes the field  .. seealso:: :ref:`Advanced "
"Fields/Compute fields <reference/fields/compute>`"
msgstr ""

#: odoo.fields.Field:75 of
msgid "name of a method that computes the field"
msgstr ""

#: odoo.fields.Field:77 of
msgid ":ref:`Advanced Fields/Compute fields <reference/fields/compute>`"
msgstr ""

#: odoo.fields.Field:79 of
msgid ""
"whether the field should be recomputed as superuser to bypass access "
"rights (by default ``True`` for stored fields, ``False`` for non stored "
"fields)"
msgstr ""

#: odoo.fields.Field:83 of
msgid "name of a method that inverses the field (optional)"
msgstr ""

#: odoo.fields.Field:85 of
msgid "name of a method that implement search on the field (optional)"
msgstr ""

#: odoo.fields.Field:87 of
msgid ""
"sequence of field names  .. seealso:: :ref:`Advanced fields/Related "
"fields <reference/fields/related>`"
msgstr ""

#: odoo.fields.Field:87 of
msgid "sequence of field names"
msgstr ""

#: odoo.fields.Field:89 of
msgid ":ref:`Advanced fields/Related fields <reference/fields/related>`"
msgstr ""

#: ../../reference/orm.rst:115
msgid "Basic Fields"
msgstr ""

#: odoo.fields.Char:1 of
msgid ""
"Basic string field, can be length-limited, usually displayed as a single-"
"line string in clients."
msgstr ""

#: odoo.fields.Char:4 of
msgid "the maximum size of values stored for that field"
msgstr ""

#: odoo.fields.Char:6 of
msgid ""
"states whether the value is trimmed or not (by default, ``True``). Note "
"that the trim operation is applied only by the web client."
msgstr ""

#: odoo.fields.Char:9 odoo.fields.Text:4 of
msgid ""
"enable the translation of the field's values; use ``translate=True`` to "
"translate field values as a whole; ``translate`` may also be a callable "
"such that ``translate(callback, value)`` translates ``value`` by using "
"``callback(term)`` to retrieve the translation of terms."
msgstr ""

#: odoo.fields.Float:1 of
msgid "The precision digits are given by the attribute"
msgstr ""

#: odoo.fields.Float:3 of
msgid ""
"a pair (total, decimal) or a string referencing a `decimal.precision` "
"record."
msgstr ""

#: ../../reference/orm.rst:128
msgid "Advanced Fields"
msgstr ""

#: odoo.fields.Monetary:1 of
msgid "The decimal precision and currency symbol are taken from the attribute"
msgstr ""

#: odoo.fields.Monetary:3 of
msgid ""
"name of the field holding the currency this monetary field is expressed "
"in (default: `'currency_id'`)"
msgstr ""

#: odoo.fields.Selection:1 of
msgid ""
"specifies the possible values for this field. It is given as either a "
"list of pairs ``(value, label)``, or a model method, or a method name."
msgstr ""

#: odoo.fields.Selection:6 of
msgid ""
"provides an extension of the selection in the case of an overridden "
"field. It is a list of pairs ``(value, label)`` or singletons "
"``(value,)``, where singleton values must appear in the overridden "
"selection. The new values are inserted in an order that is consistent "
"with the overridden selection and this list::      selection = [('a', "
"'A'), ('b', 'B')]     selection_add = [('c', 'C'), ('b',)]     > result ="
" [('a', 'A'), ('c', 'C'), ('b', 'B')]"
msgstr ""

#: odoo.fields.Selection:6 of
msgid ""
"provides an extension of the selection in the case of an overridden "
"field. It is a list of pairs ``(value, label)`` or singletons "
"``(value,)``, where singleton values must appear in the overridden "
"selection. The new values are inserted in an order that is consistent "
"with the overridden selection and this list::"
msgstr ""

#: odoo.fields.Selection:17 of
msgid ""
"The attribute ``selection`` is mandatory except in the case of "
"``related`` or extended fields."
msgstr ""

#: odoo.fields.Text:1 of
msgid ""
"Very similar to :class:`~.Char` but used for longer contents, does not "
"have a size and usually displayed as a multiline text box."
msgstr ""

#: ../../reference/orm.rst:141
msgid "Date(time) Fields"
msgstr ""

#: ../../reference/orm.rst:143
msgid ""
"Dates and Datetimes are very important fields in any kind of business "
"application, they are heavily used in many popular Odoo applications such"
" as logistics or accounting and their misuse can create invisible yet "
"painful bugs, this excerpt aims to provide Odoo developers with the "
"knowledge required to avoid misusing these fields."
msgstr ""

#: ../../reference/orm.rst:149
msgid ""
"When assigning a value to a Date/Datetime field, the following options "
"are valid:"
msgstr ""

#: ../../reference/orm.rst:151
msgid "A `date` or `datetime` object."
msgstr ""

#: ../../reference/orm.rst:152
msgid ""
"A string in the proper server format *(YYYY-MM-DD)* for Date fields, "
"*(YYYY-MM-DD HH:MM:SS)* for Datetime fields."
msgstr ""

#: ../../reference/orm.rst:154
msgid "`False` or `None`."
msgstr ""

#: ../../reference/orm.rst:156
msgid ""
"The Date and Datetime fields class have helper methods to attempt "
"conversion into a compatible type: :func:`~odoo.fields.Date.to_date` will"
" convert to a `datetime.date` object while "
":func:`~odoo.fields.Datetime.to_datetime` will convert to a "
"`datetime.datetime`."
msgstr ""

#: ../../reference/orm.rst:160 ../../reference/orm.rst:771
#: odoo.exceptions.AccessDenied:7 odoo.exceptions.AccessError:3
#: odoo.exceptions.CacheMiss:3 odoo.exceptions.MissingError:3
#: odoo.exceptions.ValidationError:3 of
msgid "Example"
msgstr ""

#: ../../reference/orm.rst:162
msgid "To parse date/datetimes coming from external sources::"
msgstr ""

#: ../../reference/orm.rst:166
msgid "Date / Datetime comparison best practices:"
msgstr ""

#: ../../reference/orm.rst:168
msgid "Date fields can **only** be compared to date objects."
msgstr ""

#: ../../reference/orm.rst:169
msgid "Datetime fields can **only** be compared to datetime objects."
msgstr ""

#: ../../reference/orm.rst:171
msgid ""
"Strings representing dates and datetimes can be compared between each "
"other, however the result may not be the expected result, as a datetime "
"string will always be greater than a date string, therefore this practice"
" is **heavily** discouraged."
msgstr ""

#: ../../reference/orm.rst:177
msgid ""
"Common operations with dates and datetimes such as addition, substraction"
" or fetching the start/end of a period are exposed through both "
":class:`~odoo.fields.Date` and :class:`~odoo.fields.Datetime`. These "
"helpers are also available by importing `odoo.tools.date_utils`."
msgstr ""

#: ../../reference/orm.rst:182
msgid "Timezones"
msgstr ""

#: ../../reference/orm.rst:184
msgid ""
"Datetime fields are stored as `timestamp without timezone` columns in the"
" database and are stored in the UTC timezone. This is by design, as it "
"makes the Odoo database independent from the timezone of the hosting "
"server system. Timezone conversion is managed entirely by the client "
"side."
msgstr ""

#: odoo.fields.Date:1 of
msgid "This field type encapsulates a python date object. :type date:"
msgstr ""

#: odoo.fields.Date.add:1 odoo.fields.Datetime.add:1 of
msgid "Return the sum of ``value`` and a :class:`relativedelta`."
msgstr ""

#: odoo.fields.Date.add:3 odoo.fields.Date.end_of:3 odoo.fields.Date.start_of:3
#: odoo.fields.Date.subtract:3 odoo.fields.Datetime.add:3
#: odoo.fields.Datetime.end_of:3 odoo.fields.Datetime.start_of:3
#: odoo.fields.Datetime.subtract:3 of
msgid "initial date or datetime."
msgstr ""

#: odoo.fields.Date.add:4 odoo.fields.Date.subtract:4
#: odoo.fields.Datetime.add:4 odoo.fields.Datetime.subtract:4 of
msgid "positional args to pass directly to :class:`relativedelta`."
msgstr ""

#: odoo.fields.Date.add:5 odoo.fields.Date.subtract:5
#: odoo.fields.Datetime.add:5 odoo.fields.Datetime.subtract:5 of
msgid "keyword args to pass directly to :class:`relativedelta`."
msgstr ""

#: odoo.api.Environment.companies odoo.api.Environment.company
#: odoo.fields.Date.add odoo.fields.Date.end_of odoo.fields.Date.start_of
#: odoo.fields.Date.subtract odoo.fields.Date.to_date
#: odoo.fields.Date.to_string odoo.fields.Datetime.add
#: odoo.fields.Datetime.context_timestamp odoo.fields.Datetime.end_of
#: odoo.fields.Datetime.start_of odoo.fields.Datetime.subtract
#: odoo.fields.Datetime.to_datetime odoo.fields.Datetime.to_string
#: odoo.models.Model.browse odoo.models.Model.copy odoo.models.Model.create
#: odoo.models.Model.default_get odoo.models.Model.fields_view_get
#: odoo.models.Model.filtered odoo.models.Model.get_metadata
#: odoo.models.Model.mapped odoo.models.Model.name_create
#: odoo.models.Model.name_get odoo.models.Model.name_search
#: odoo.models.Model.read odoo.models.Model.read_group odoo.models.Model.search
#: of
msgid "Результат"
msgstr ""

#: odoo.fields.Date.add:6 odoo.fields.Date.subtract:6
#: odoo.fields.Datetime.add:6 odoo.fields.Datetime.subtract:6 of
msgid "the resulting date/datetime."
msgstr ""

#: odoo.fields.Date.context_today:1 of
msgid ""
"Return the current date as seen in the client's timezone in a format fit "
"for date fields."
msgstr ""

#: odoo.fields.Date.context_today:4 of
msgid "This method may be used to compute default values."
msgstr ""

#: odoo.fields.Date.context_today:6 odoo.fields.Datetime.context_timestamp:8 of
msgid "recordset from which the timezone will be obtained."
msgstr ""

#: odoo.fields.Date.context_today:7 of
msgid ""
"optional datetime value to use instead of the current date and time (must"
" be a datetime, regular dates can't be converted between timezones)."
msgstr ""

#: odoo.api.Environment.companies odoo.api.Environment.company
#: odoo.api.Environment.lang odoo.api.Environment.user
#: odoo.fields.Date.context_today odoo.fields.Date.to_date
#: odoo.fields.Date.to_string odoo.fields.Datetime.context_timestamp
#: odoo.fields.Datetime.to_datetime odoo.fields.Datetime.to_string
#: odoo.models.Model.fields_view_get odoo.models.Model.get_metadata
#: odoo.models.Model.mapped odoo.models.Model.name_create
#: odoo.models.Model.name_get odoo.models.Model.name_search
#: odoo.models.Model.read_group of
msgid "Тип результата"
msgstr ""

#: odoo.fields.Date.end_of:1 odoo.fields.Datetime.end_of:1 of
msgid "Get end of a time period from a date or a datetime."
msgstr ""

#: odoo.fields.Date.end_of:4 odoo.fields.Datetime.end_of:4 of
msgid "Type of period in string, can be year, quarter, month, week, day or hour."
msgstr ""

#: odoo.fields.Date.end_of:5 odoo.fields.Datetime.end_of:5 of
msgid "A date/datetime object corresponding to the start of the specified period."
msgstr ""

#: odoo.fields.Date.start_of:1 odoo.fields.Datetime.start_of:1 of
msgid "Get start of a time period from a date or a datetime."
msgstr ""

#: odoo.fields.Date.start_of:4 odoo.fields.Datetime.start_of:4 of
msgid "type of period in string, can be year, quarter, month, week, day or hour."
msgstr ""

#: odoo.fields.Date.start_of:5 odoo.fields.Datetime.start_of:5 of
msgid "a date/datetime object corresponding to the start of the specified period."
msgstr ""

#: odoo.fields.Date.subtract:1 odoo.fields.Datetime.subtract:1 of
msgid "Return the difference between ``value`` and a :class:`relativedelta`."
msgstr ""

#: odoo.fields.Date.to_date:1 of
msgid "Attempt to convert ``value`` to a :class:`date` object."
msgstr ""

#: odoo.fields.Date.to_date:5 of
msgid ""
"If a datetime object is given as value, it will be converted to a date "
"object and all datetime-specific information will be lost (HMS, TZ, ...)."
msgstr ""

#: odoo.fields.Date.to_date:9 odoo.fields.Date.to_string:3
#: odoo.fields.Datetime.to_datetime:3 odoo.fields.Datetime.to_string:3 of
msgid "value to convert."
msgstr ""

#: odoo.fields.Date.to_date:11 odoo.fields.Datetime.to_datetime:5 of
msgid "an object representing ``value``."
msgstr ""

#: odoo.fields.Date.to_string:1 of
msgid "Convert a :class:`date` or :class:`datetime` object to a string."
msgstr ""

#: odoo.fields.Date.to_string:4 of
msgid ""
"a string representing ``value`` in the server's date format, if ``value``"
" is of type :class:`datetime`, the hours, minute, seconds, tzinfo will be"
" truncated."
msgstr ""

#: odoo.fields.Date.today:1 of
msgid "Return the current day in the format expected by the ORM."
msgstr ""

#: odoo.fields.Date.today:3 odoo.fields.Datetime.now:3 of
msgid "This function may be used to compute default values."
msgstr ""

#: odoo.fields.Datetime:1 of
msgid "This field type encapsulates a python datetime object. :type datetime:"
msgstr ""

#: odoo.fields.Datetime.context_timestamp:1 of
msgid "Return the given timestamp converted to the client's timezone."
msgstr ""

#: odoo.fields.Datetime.context_timestamp:3 of
msgid ""
"This method is *not* meant for use as a default initializer, because "
"datetime fields are automatically converted upon display on client side. "
"For default values, :meth:`now` should be used instead."
msgstr ""

#: odoo.fields.Datetime.context_timestamp:9 of
msgid ""
"naive datetime value (expressed in UTC) to be converted to the client "
"timezone."
msgstr ""

#: odoo.fields.Datetime.context_timestamp:11 of
msgid "timestamp converted to timezone-aware datetime in context timezone."
msgstr ""

#: odoo.fields.Datetime.now:1 of
msgid "Return the current day and time in the format expected by the ORM."
msgstr ""

#: odoo.fields.Datetime.to_datetime:1 of
msgid "Convert an ORM ``value`` into a :class:`datetime` value."
msgstr ""

#: odoo.fields.Datetime.to_string:1 of
msgid "Convert a :class:`datetime` or :class:`date` object to a string."
msgstr ""

#: odoo.fields.Datetime.to_string:5 of
msgid ""
"a string representing ``value`` in the server's datetime format, if "
"``value`` is of type :class:`date`, the time portion will be midnight "
"(00:00:00)."
msgstr ""

#: odoo.fields.Datetime.today:1 of
msgid "Return the current day, at midnight (00:00:00)."
msgstr ""

#: ../../reference/orm.rst:197
msgid "Relational Fields"
msgstr ""

#: odoo.fields.Many2one:1 of
msgid ""
"The value of such a field is a recordset of size 0 (no record) or 1 (a "
"single record)."
msgstr ""

#: odoo.fields.Many2one:4 of
msgid ""
"name of the target model ``Mandatory`` except for related or extended "
"fields."
msgstr ""

#: odoo.fields.Many2many:29 odoo.fields.Many2one:7 odoo.fields.One2many:10 of
msgid ""
"an optional domain to set on candidate values on the client side (domain "
"or string)"
msgstr ""

#: odoo.fields.Many2many:32 odoo.fields.Many2one:10 odoo.fields.One2many:13 of
msgid "an optional context to use on the client side when handling that field"
msgstr ""

#: odoo.fields.Many2one:13 of
msgid ""
"what to do when the referred record is deleted; possible values are: "
"``'set null'``, ``'restrict'``, ``'cascade'``"
msgstr ""

#: odoo.fields.Many2one:16 odoo.fields.One2many:16 of
msgid ""
"whether JOINs are generated upon search through that field (default: "
"``False``)"
msgstr ""

#: odoo.fields.Many2one:19 of
msgid ""
"set it to ``True`` to make fields of the target model accessible from the"
" current model (corresponds to ``_inherits``)"
msgstr ""

#: odoo.fields.Many2many:35 odoo.fields.Many2one:22 of
msgid ""
"Mark the field to be verified in "
":meth:`~odoo.models.Model._check_company`. Add a default company domain "
"depending on the field attributes."
msgstr ""

#: odoo.fields.One2many:1 of
msgid ""
"One2many field; the value of such a field is the recordset of all the "
"records in ``comodel_name`` such that the field ``inverse_name`` is equal"
" to the current record."
msgstr ""

#: odoo.fields.One2many:5 of
msgid "name of the target model"
msgstr ""

#: odoo.fields.One2many:7 of
msgid "name of the inverse ``Many2one`` field in ``comodel_name``"
msgstr ""

#: odoo.fields.Many2many:39 odoo.fields.One2many:19 of
msgid "optional limit to use upon read"
msgstr ""

#: odoo.fields.One2many:21 of
msgid ""
"The attributes ``comodel_name`` and ``inverse_name`` are mandatory except"
" in the case of related fields or field extensions."
msgstr ""

#: odoo.fields.Many2many:1 of
msgid "Many2many field; the value of such a field is the recordset."
msgstr ""

#: odoo.fields.Many2many:3 of
msgid ""
"name of the target model (string) mandatory except in the case of related"
" or extended fields"
msgstr ""

#: odoo.fields.Many2many:6 of
msgid "optional name of the table that stores the relation in the database"
msgstr ""

#: odoo.fields.Many2many:9 of
msgid ""
"optional name of the column referring to \"these\" records in the table "
"``relation``"
msgstr ""

#: odoo.fields.Many2many:12 of
msgid ""
"optional name of the column referring to \"those\" records in the table "
"``relation``"
msgstr ""

#: odoo.fields.Many2many:15 of
msgid ""
"The attributes ``relation``, ``column1`` and ``column2`` are optional. If"
" not given, names are automatically generated from model names, provided "
"``model_name`` and ``comodel_name`` are different!"
msgstr ""

#: odoo.fields.Many2many:19 of
msgid ""
"Note that having several fields with implicit relation parameters on a "
"given model with the same comodel is not accepted by the ORM, since those"
" field would use the same table. The ORM prevents two many2many fields to"
" use the same relation parameters, except if"
msgstr ""

#: odoo.fields.Many2many:24 of
msgid ""
"both fields use the same model, comodel, and relation parameters are "
"explicit; or"
msgstr ""

#: odoo.fields.Many2many:27 of
msgid "at least one field belongs to a model with ``_auto = False``."
msgstr ""

#: ../../reference/orm.rst:206
msgid "Pseudo-relational fields"
msgstr ""

#: ../../reference/orm.rst:217
msgid ""
"Fields can be computed (instead of read straight from the database) using"
" the ``compute`` parameter. **It must assign the computed value to the "
"field**. If it uses the values of other *fields*, it should specify those"
" fields using :func:`~odoo.api.depends`. ::"
msgstr ""

#: ../../reference/orm.rst:230
msgid "dependencies can be dotted paths when using sub-fields::"
msgstr ""

#: ../../reference/orm.rst:237
msgid ""
"computed fields are not stored by default, they are computed and returned"
" when requested. Setting ``store=True`` will store them in the database "
"and automatically enable searching."
msgstr ""

#: ../../reference/orm.rst:240
msgid ""
"searching on a computed field can also be enabled by setting the "
"``search`` parameter. The value is a method name returning a "
":ref:`reference/orm/domains`. ::"
msgstr ""

#: ../../reference/orm.rst:251
msgid ""
"The search method is invoked when processing domains before doing an "
"actual search on the model. It must return a domain equivalent to the "
"condition: ``field operator value``."
msgstr ""

#: ../../reference/orm.rst:257
msgid ""
"Computed fields are readonly by default. To allow *setting* values on a "
"computed field, use the ``inverse`` parameter. It is the name of a "
"function reversing the computation and setting the relevant fields::"
msgstr ""

#: ../../reference/orm.rst:273
msgid ""
"multiple fields can be computed at the same time by the same method, just"
" use the same method on all fields and set all of them::"
msgstr ""

#: ../../reference/orm.rst:290
msgid "Related fields"
msgstr ""

#: ../../reference/orm.rst:292
msgid ""
"A special case of computed fields are *related* (proxy) fields, which "
"provide the value of a sub-field on the current record. They are defined "
"by setting the ``related`` parameter and like regular computed fields "
"they can be stored::"
msgstr ""

#: ../../reference/orm.rst:299
msgid ""
"The value of a related field is given by following a sequence of "
"relational fields and reading a field on the reached model. The complete "
"sequence of fields to traverse is specified by the ``related`` attribute."
msgstr ""

#: ../../reference/orm.rst:303
msgid ""
"Some field attributes are automatically copied from the source field if "
"they are not redefined: ``string``, ``help``, ``readonly``, ``required`` "
"(only if all fields in the sequence are required), ``groups``, "
"``digits``, ``size``, ``translate``, ``sanitize``, ``selection``, "
"``comodel_name``, ``domain``, ``context``. All semantic-free attributes "
"are copied from the source field."
msgstr ""

#: ../../reference/orm.rst:310
msgid ""
"By default, the values of related fields are not stored to the database. "
"Add the attribute ``store=True`` to make it stored, just like computed "
"fields. Related fields are automatically recomputed when their "
"dependencies are modified."
msgstr ""

#: ../../reference/orm.rst:315
msgid "The related fields are computed in sudo mode."
msgstr ""

#: ../../reference/orm.rst:320
msgid "Automatic fields"
msgstr ""

#: ../../reference/orm.rst:326
msgid "Identifier :class:`field <odoo.fields.Field>`"
msgstr ""

#: ../../reference/orm.rst:328
msgid "If length of current recordset is 1, return id of unique record in it."
msgstr ""

#: ../../reference/orm.rst:330
msgid "Raise an Error otherwise."
msgstr ""

#: ../../reference/orm.rst:336 ../../reference/orm.rst:344
msgid ":class:`~odoo.fields.Datetime`"
msgstr ""

#: ../../reference/orm.rst:340 ../../reference/orm.rst:348
#: ../../reference/orm.rst:394
msgid ":class:`~odoo.fields.Many2one`"
msgstr ""

#: ../../reference/orm.rst:353
msgid "Reserved Field names"
msgstr ""

#: ../../reference/orm.rst:355
msgid ""
"A few field names are reserved for pre-defined behaviors beyond that of "
"automated fields. They should be defined on a model when the related "
"behavior is desired:"
msgstr ""

#: ../../reference/orm.rst:361
msgid ""
"default value for :attr:`~odoo.models.BaseModel._rec_name`, used to "
"display records in context where a representative \"naming\" is "
"necessary."
msgstr ""

#: ../../reference/orm.rst:365 ../../reference/orm.rst:403
msgid ":class:`~odoo.fields.Char`"
msgstr ""

#: ../../reference/orm.rst:369
msgid ""
"toggles the global visibility of the record, if ``active`` is set to "
"``False`` the record is invisible in most searches and listing."
msgstr ""

#: ../../reference/orm.rst:372
msgid ":class:`~odoo.fields.Boolean`"
msgstr ""

#: ../../reference/orm.rst:383
msgid ""
"lifecycle stages of the object, used by the ``states`` attribute on "
":class:`fields <odoo.fields.Field>`."
msgstr ""

#: ../../reference/orm.rst:386
msgid ":class:`~odoo.fields.Selection`"
msgstr ""

#: ../../reference/orm.rst:390
msgid ""
"default_value of :attr:`~._parent_name`, used to organize records in a "
"tree structure and enables the ``child_of`` and ``parent_of`` operators "
"in domains."
msgstr ""

#: ../../reference/orm.rst:398
msgid ""
"When :attr:`~._parent_store` is set to True, used to store a value "
"reflecting the tree structure of :attr:`~._parent_name`, and to optimize "
"the operators ``child_of`` and ``parent_of`` in search domains. It must "
"be declared with ``index=True`` for proper operation."
msgstr ""

#: ../../reference/orm.rst:407
msgid "Main field name used for Odoo multi-company behavior."
msgstr ""

#: ../../reference/orm.rst:409
msgid ""
"Used by `:meth:~odoo.models._check_company` to check multi company "
"consistency. Defines whether a record is shared between companies (no "
"value) or only accessible by the users of a given company."
msgstr ""

#: ../../reference/orm.rst:413
msgid ""
":class:`~odoo.fields.Many2one` :type: "
":class:`~odoo.addons.base.models.res_company`"
msgstr ""

#: ../../reference/orm.rst:417
msgid "Recordsets"
msgstr ""

#: ../../reference/orm.rst:419
msgid ""
"Interactions with models and records are performed through recordsets, an"
" ordered collection of records of the same model."
msgstr ""

#: ../../reference/orm.rst:422
msgid ""
"Contrary to what the name implies, it is currently possible for "
"recordsets to contain duplicates. This may change in the future."
msgstr ""

#: ../../reference/orm.rst:425
msgid ""
"Methods defined on a model are executed on a recordset, and their "
"``self`` is a recordset::"
msgstr ""

#: ../../reference/orm.rst:435
msgid ""
"Iterating on a recordset will yield new sets of *a single record* "
"(\"singletons\"), much like iterating on a Python string yields strings "
"of a single characters::"
msgstr ""

#: ../../reference/orm.rst:445
msgid "Field access"
msgstr ""

#: ../../reference/orm.rst:447
msgid ""
"Recordsets provide an \"Active Record\" interface: model fields can be "
"read and written directly from the record as attributes."
msgstr ""

#: ../../reference/orm.rst:452
msgid ""
"When accessing non-relational fields on a recordset of potentially "
"multiple records, use :meth:`~odoo.models.BaseModel.mapped`::"
msgstr ""

#: ../../reference/orm.rst:457
msgid ""
"Field values can also be accessed like dict items, which is more elegant "
"and safer than ``getattr()`` for dynamic field names. Setting a field's "
"value triggers an update to the database::"
msgstr ""

#: ../../reference/orm.rst:472
msgid ""
"Trying to read a field on multiple records will raise an error for non "
"relational fields."
msgstr ""

#: ../../reference/orm.rst:475
msgid ""
"Accessing a relational field (:class:`~odoo.fields.Many2one`, "
":class:`~odoo.fields.One2many`, :class:`~odoo.fields.Many2many`) *always*"
" returns a recordset, empty if the field is not set."
msgstr ""

#: ../../reference/orm.rst:480
msgid "Record cache and prefetching"
msgstr ""

#: ../../reference/orm.rst:482
msgid ""
"Odoo maintains a cache for the fields of the records, so that not every "
"field access issues a database request, which would be terrible for "
"performance. The following example queries the database only for the "
"first statement::"
msgstr ""

#: ../../reference/orm.rst:489
msgid ""
"To avoid reading one field on one record at a time, Odoo *prefetches* "
"records and fields following some heuristics to get good performance. "
"Once a field must be read on a given record, the ORM actually reads that "
"field on a larger recordset, and stores the returned values in cache for "
"later use. The prefetched recordset is usually the recordset from which "
"the record comes by iteration. Moreover, all simple stored fields "
"(boolean, integer, float, char, text, date, datetime, selection, "
"many2one) are fetched altogether; they correspond to the columns of the "
"model's table, and are fetched efficiently in the same query."
msgstr ""

#: ../../reference/orm.rst:498
msgid ""
"Consider the following example, where ``partners`` is a recordset of 1000"
" records. Without prefetching, the loop would make 2000 queries to the "
"database. With prefetching, only one query is made::"
msgstr ""

#: ../../reference/orm.rst:507
msgid ""
"The prefetching also works on *secondary records*: when relational fields"
" are read, their values (which are records) are  subscribed for future "
"prefetching. Accessing one of those secondary records prefetches all "
"secondary records from the same model. This makes the following example "
"generate only two queries, one for partners and one for countries::"
msgstr ""

#: ../../reference/orm.rst:522
msgid "Method decorators"
msgstr ""

#: odoo.api:1 of
msgid "The Odoo API module defines Odoo Environments and method decorators."
msgstr ""

#: odoo.api.depends:1 of
msgid ""
"Return a decorator that specifies the field dependencies of a \"compute\""
" method (for new-style function fields). Each argument must be a string "
"that consists in a dot-separated sequence of field names::"
msgstr ""

#: odoo.api.depends:15 of
msgid ""
"One may also pass a single function as argument. In that case, the "
"dependencies are given by calling the function with the field's model."
msgstr ""

#: odoo.api.depends_context:1 of
msgid ""
"Return a decorator that specifies the context dependencies of a non-"
"stored \"compute\" method.  Each argument is a key in the context's "
"dictionary::"
msgstr ""

#: odoo.api.depends_context:16 of
msgid ""
"All dependencies must be hashable.  The following keys have special "
"support:"
msgstr ""

#: odoo.api.depends_context:19 of
msgid "`force_company` (value in context or current company id),"
msgstr ""

#: odoo.api.depends_context:20 of
msgid "`uid` (current user id and superuser flag),"
msgstr ""

#: odoo.api.depends_context:21 of
msgid "`active_test` (value in env.context or value in field.context)."
msgstr ""

#: odoo.api.constrains:1 of
msgid "Decorate a constraint checker."
msgstr ""

#: odoo.api.constrains:3 of
msgid "Each argument must be a field name used in the check::"
msgstr ""

#: odoo.api.constrains:11 of
msgid "Invoked on the records on which one of the named fields has been modified."
msgstr ""

#: odoo.api.constrains:13 of
msgid ""
"Should raise :exc:`~odoo.exceptions.ValidationError` if the validation "
"failed."
msgstr ""

#: odoo.api.constrains:18 of
msgid ""
"``@constrains`` only supports simple field names, dotted names (fields of"
" relational fields e.g. ``partner_id.customer``) are not supported and "
"will be ignored."
msgstr ""

#: odoo.api.constrains:22 of
msgid ""
"``@constrains`` will be triggered only if the declared fields in the "
"decorated method are included in the ``create`` or ``write`` call. It "
"implies that fields not present in a view will not trigger a call during "
"a record creation. A override of ``create`` is necessary to make sure a "
"constraint will always be triggered (e.g. to test the absence of value)."
msgstr ""

#: odoo.api.onchange:1 of
msgid "Return a decorator to decorate an onchange method for given fields."
msgstr ""

#: odoo.api.onchange:3 of
msgid ""
"In the form views where the field appears, the method will be called when"
" one of the given fields is modified. The method is invoked on a pseudo-"
"record that contains the values present in the form. Field assignments on"
" that record are automatically sent back to the client."
msgstr ""

#: odoo.api.onchange:8 of
msgid "Each argument must be a field name::"
msgstr ""

#: odoo.api.onchange:21 of
msgid ""
"If the type is set to notification, the warning will be displayed in a "
"notification. Otherwise it will be displayed in a dialog as default."
msgstr ""

#: odoo.api.onchange:26 of
msgid ""
"``@onchange`` only supports simple field names, dotted names (fields of "
"relational fields e.g. ``partner_id.tz``) are not supported and will be "
"ignored"
msgstr ""

#: odoo.api.onchange:32 of
msgid ""
"Since ``@onchange`` returns a recordset of pseudo-records, calling any "
"one of the CRUD methods (:meth:`create`, :meth:`read`, :meth:`write`, "
":meth:`unlink`) on the aforementioned recordset is undefined behaviour, "
"as they potentially do not exist in the database yet."
msgstr ""

#: odoo.api.onchange:38 of
msgid ""
"Instead, simply set the record's field like shown in the example above or"
" call the :meth:`update` method."
msgstr ""

#: odoo.api.onchange:43 of
msgid ""
"It is not possible for a ``one2many`` or ``many2many`` field to modify "
"itself via onchange. This is a webclient limitation - see `#2693 "
"<https://github.com/odoo/odoo/issues/2693>`_."
msgstr ""

#: odoo.api.returns:1 of
msgid "Return a decorator for methods that return instances of ``model``."
msgstr ""

#: odoo.api.returns:3 of
msgid "a model name, or ``'self'`` for the current model"
msgstr ""

#: odoo.api.returns:5 of
msgid ""
"a function ``downgrade(self, value, *args, **kwargs)`` to convert the "
"record-style ``value`` to a traditional-style output"
msgstr ""

#: odoo.api.returns:8 of
msgid ""
"a function ``upgrade(self, value, *args, **kwargs)`` to convert the "
"traditional-style ``value`` to a record-style output"
msgstr ""

#: odoo.api.returns:11 of
msgid ""
"The arguments ``self``, ``*args`` and ``**kwargs`` are the ones passed to"
" the method in the record-style."
msgstr ""

#: odoo.api.returns:14 of
msgid ""
"The decorator adapts the method output to the api style: ``id``, ``ids`` "
"or ``False`` for the traditional style, and recordset for the record "
"style::"
msgstr ""

#: odoo.api.returns:28 of
msgid "Note that the decorated method must satisfy that convention."
msgstr ""

#: odoo.api.returns:30 of
msgid ""
"Those decorators are automatically *inherited*: a method that overrides a"
" decorated existing method will be decorated with the same "
"``@returns(model)``."
msgstr ""

#: odoo.api.model_create_multi:1 of
msgid ""
"Decorate a method that takes a list of dictionaries and creates multiple "
"records. The method may be called with either a single dict or a list of "
"dicts::"
msgstr ""

#: ../../reference/orm.rst:550
msgid "Environment"
msgstr ""

#: ../../reference/orm.rst:552
msgid ""
"The :class:`~odoo.api.Environment` stores various contextual data used by"
" the ORM: the database cursor (for database queries), the current user "
"(for access rights checking) and the current context (storing arbitrary "
"metadata). The environment also stores caches."
msgstr ""

#: ../../reference/orm.rst:557
msgid ""
"All recordsets have an environment, which is immutable, can be accessed "
"using :attr:`~odoo.models.Model.env` and gives access to:"
msgstr ""

#: ../../reference/orm.rst:560
msgid "the current user (:attr:`~odoo.api.Environment.user`)"
msgstr ""

#: ../../reference/orm.rst:561
msgid "the cursor (:attr:`~odoo.api.Environment.cr`)"
msgstr ""

#: ../../reference/orm.rst:562
msgid "the superuser flag (:attr:`~odoo.api.Environment.su`)"
msgstr ""

#: ../../reference/orm.rst:563
msgid "or the context (:attr:`~odoo.api.Environment.context`)"
msgstr ""

#: ../../reference/orm.rst:574
msgid ""
"When creating a recordset from an other recordset, the environment is "
"inherited. The environment can be used to get an empty recordset in an "
"other model, and query that model::"
msgstr ""

#: odoo.api.Environment.ref:1 of
msgid "Return the record corresponding to the given ``xml_id``."
msgstr ""

#: odoo.api.Environment.lang:1 of
msgid "Return the current language code."
msgstr ""

#: odoo.api.Environment.user:1 of
msgid "Return the current user (as an instance)."
msgstr ""

#: odoo.api.Environment.user:3 of
msgid ":class:`~odoo.addons.base.models.res_users`"
msgstr ""

#: odoo.api.Environment.company:1 of
msgid "Return the current company (as an instance)."
msgstr ""

#: odoo.api.Environment.company:3 of
msgid ""
"If not specified in the context (`allowed_company_ids`), fallback on "
"current user main company."
msgstr ""

#: odoo.api.Environment.companies odoo.api.Environment.company
#: odoo.models.Model.create odoo.models.Model.ensure_one
#: odoo.models.Model.fields_view_get odoo.models.Model.read
#: odoo.models.Model.read_group odoo.models.Model.search
#: odoo.models.Model.unlink odoo.models.Model.write of
msgid "Исключение"
msgstr ""

#: odoo.api.Environment.companies:6 odoo.api.Environment.company:6 of
msgid "invalid or unauthorized `allowed_company_ids` context key content."
msgstr ""

#: odoo.api.Environment.company:7 of
msgid "current company (default=`self.user.company_id`)"
msgstr ""

#: odoo.api.Environment.companies:12 odoo.api.Environment.company:12 of
msgid ""
"No sanity checks applied in sudo mode ! When in sudo mode, a user can "
"access any company, even if not in his allowed companies."
msgstr ""

#: odoo.api.Environment.companies:16 odoo.api.Environment.company:16 of
msgid ""
"This allows to trigger inter-company modifications, even if the current "
"user doesn't have access to the targeted company."
msgstr ""

#: odoo.api.Environment.companies:1 of
msgid "Return a recordset of the enabled companies by the user."
msgstr ""

#: odoo.api.Environment.companies:3 of
msgid ""
"If not specified in the context(`allowed_company_ids`), fallback on "
"current user companies."
msgstr ""

#: odoo.api.Environment.companies:7 of
msgid "current companies (default=`self.user.company_ids`)"
msgstr ""

#: ../../reference/orm.rst:598
msgid "Altering the environment"
msgstr ""

#: odoo.models.Model.with_context:1 of
msgid "Returns a new version of this recordset attached to an extended context."
msgstr ""

#: odoo.models.Model.with_context:4 of
msgid ""
"The extended context is either the provided ``context`` in which "
"``overrides`` are merged or the *current* context in which ``overrides`` "
"are merged e.g.::"
msgstr ""

#: odoo.models.Model.with_user:1 of
msgid ""
"Return a new version of this recordset attached to the given user, in "
"non-superuser mode, unless `user` is the superuser (by convention, the "
"superuser is always in superuser mode.)"
msgstr ""

#: odoo.models.Model.with_env:1 of
msgid ""
"Return a new version of this recordset attached to the provided "
"environment."
msgstr ""

#: odoo.models.Model.with_env:7 of
msgid ""
"The new environment will not benefit from the current environment's data "
"cache, so later data access may incur extra delays while re-fetching from"
" the database. The returned recordset has the same prefetch object as "
"``self``."
msgstr ""

#: odoo.models.Model.sudo:1 of
msgid ""
"Returns a new version of this recordset with superuser mode enabled or "
"disabled, depending on `flag`. The superuser mode does not change the "
"current user, and simply bypasses access rights checks."
msgstr ""

#: odoo.models.Model.sudo:7 of
msgid ""
"Using ``sudo`` could cause data access to cross the boundaries of record "
"rules, possibly mixing records that are meant to be isolated (e.g. "
"records from different companies in multi-company environments)."
msgstr ""

#: odoo.models.Model.sudo:12 of
msgid ""
"It may lead to un-intuitive results in methods which select one record "
"among many - for example getting the default company, or selecting a Bill"
" of Materials."
msgstr ""

#: odoo.models.Model.sudo:18 of
msgid ""
"Because the record rules and access control will have to be re-evaluated,"
" the new recordset will not benefit from the current environment's data "
"cache, so later data access may incur extra delays while re-fetching from"
" the database. The returned recordset has the same prefetch object as "
"``self``."
msgstr ""

#: ../../reference/orm.rst:613
msgid "SQL Execution"
msgstr ""

#: ../../reference/orm.rst:615
msgid ""
"The :attr:`~odoo.api.Environment.cr` attribute on environments is the "
"cursor for the current database transaction and allows executing SQL "
"directly, either for queries which are difficult to express using the ORM"
" (e.g. complex joins) or for performance reasons::"
msgstr ""

#: ../../reference/orm.rst:622
msgid ""
"Because models use the same cursor and the :class:`~odoo.api.Environment`"
" holds various caches, these caches must be invalidated when *altering* "
"the database in raw SQL, or further uses of models may become incoherent."
" It is necessary to clear caches when using ``CREATE``, ``UPDATE`` or "
"``DELETE`` in SQL, but not ``SELECT`` (which simply reads the database)."
msgstr ""

#: ../../reference/orm.rst:629
msgid ""
"Clearing caches can be performed using the "
":meth:`~odoo.models.Model.invalidate_cache` method."
msgstr ""

#: odoo.models.Model.invalidate_cache:1 of
msgid ""
"Invalidate the record caches after some records have been modified. If "
"both ``fnames`` and ``ids`` are ``None``, the whole cache is cleared."
msgstr ""

#: odoo.models.Model.invalidate_cache:4 of
msgid "the list of modified fields, or ``None`` for all fields"
msgstr ""

#: odoo.models.Model.invalidate_cache:5 of
msgid "the list of modified record ids, or ``None`` for all"
msgstr ""

#: ../../reference/orm.rst:635
msgid ""
"Executing raw SQL bypasses the ORM, and by consequent, Odoo security "
"rules. Please make sure your queries are sanitized when using user input "
"and prefer using ORM utilities if you don't really need to use SQL "
"queries."
msgstr ""

#: ../../reference/orm.rst:643
msgid "Common ORM methods"
msgstr ""

#: ../../reference/orm.rst:648
msgid "Create/update"
msgstr ""

#: odoo.models.Model.create:1 of
msgid "Creates new records for the model."
msgstr ""

#: odoo.models.Model.create:3 of
msgid ""
"The new records are initialized using the values from the list of dicts "
"``vals_list``, and if necessary those from :meth:`~.default_get`."
msgstr ""

#: odoo.models.Model.create:6 of
msgid ""
"values for the model's fields, as a list of dictionaries::      "
"[{'field_name': field_value, ...}, ...]  For backward compatibility, "
"``vals_list`` may be a dictionary. It is treated as a singleton list "
"``[vals]``, and a single record is returned.  see :meth:`~.write` for "
"details"
msgstr ""

#: odoo.models.Model.create:7 of
msgid "values for the model's fields, as a list of dictionaries::"
msgstr ""

#: odoo.models.Model.create:11 of
msgid ""
"For backward compatibility, ``vals_list`` may be a dictionary. It is "
"treated as a singleton list ``[vals]``, and a single record is returned."
msgstr ""

#: odoo.models.Model.create:15 of
msgid "see :meth:`~.write` for details"
msgstr ""

#: odoo.models.Model.create:17 of
msgid "the created records"
msgstr ""

#: odoo.models.Model.create:18 of
msgid ""
"* if user has no create rights on the requested object * if user tries to"
" bypass access rules for create on the requested object"
msgstr ""

#: odoo.models.Model.create:18 of
msgid "if user has no create rights on the requested object"
msgstr ""

#: odoo.models.Model.create:19 of
msgid "if user tries to bypass access rules for create on the requested object"
msgstr ""

#: odoo.models.Model.create:20 odoo.models.Model.write:12 of
msgid "if user tries to enter invalid value for a field that is not in selection"
msgstr ""

#: odoo.models.Model.create:21 odoo.models.Model.write:13 of
msgid ""
"if a loop would be created in a hierarchy of objects a result of the "
"operation (such as setting an object as its own parent)"
msgstr ""

#: odoo.models.Model.copy:1 of
msgid "Duplicate record ``self`` updating it with default values"
msgstr ""

#: odoo.models.Model.copy:3 of
msgid ""
"dictionary of field values to override in the original values of the "
"copied record, e.g: ``{'field_name': overridden_value, ...}``"
msgstr ""

#: odoo.models.Model.copy:5 of
msgid "new record"
msgstr ""

#: odoo.models.Model.default_get:1 of
msgid ""
"Return default values for the fields in ``fields_list``. Default values "
"are determined by the context, user defaults, and the model itself."
msgstr ""

#: odoo.models.Model.default_get:5 of
msgid "a list of field names"
msgstr ""

#: odoo.models.Model.default_get:6 of
msgid ""
"a dictionary mapping each field name to its corresponding default value, "
"if it has one."
msgstr ""

#: odoo.models.Model.name_create:1 of
msgid ""
"Create a new record by calling :meth:`~.create` with only one value "
"provided: the display name of the new record."
msgstr ""

#: odoo.models.Model.name_create:4 of
msgid ""
"The new record will be initialized with any default values applicable to "
"this model, or provided through the context. The usual behavior of "
":meth:`~.create` applies."
msgstr ""

#: odoo.models.Model.name_create:8 of
msgid "display name of the record to create"
msgstr ""

#: odoo.models.Model.name_create:10 of
msgid "the :meth:`~.name_get` pair value of the created record"
msgstr ""

#: odoo.models.Model.write:1 of
msgid "Updates all records in the current set with the provided values."
msgstr ""

#: odoo.models.Model.write:3 of
msgid ""
"fields to update and the value to set on them e.g::      {'foo': 1, "
"'bar': \"Qux\"}  will set the field ``foo`` to ``1`` and the field "
"``bar`` to ``\"Qux\"`` if those are valid (otherwise it will trigger an "
"error)."
msgstr ""

#: odoo.models.Model.write:3 of
msgid "fields to update and the value to set on them e.g::"
msgstr ""

#: odoo.models.Model.write:7 of
msgid ""
"will set the field ``foo`` to ``1`` and the field ``bar`` to ``\"Qux\"`` "
"if those are valid (otherwise it will trigger an error)."
msgstr ""

#: odoo.models.Model.write:10 of
msgid ""
"* if user has no write rights on the requested object * if user tries to "
"bypass access rules for write on the requested object"
msgstr ""

#: odoo.models.Model.write:10 of
msgid "if user has no write rights on the requested object"
msgstr ""

#: odoo.models.Model.write:11 of
msgid "if user tries to bypass access rules for write on the requested object"
msgstr ""

#: odoo.models.Model.write:15 of
msgid ""
"For numeric fields (:class:`~odoo.fields.Integer`, "
":class:`~odoo.fields.Float`) the value should be of the corresponding "
"type"
msgstr ""

#: odoo.models.Model.write:18 of
msgid ""
"For :class:`~odoo.fields.Boolean`, the value should be a "
":class:`python:bool`"
msgstr ""

#: odoo.models.Model.write:20 of
msgid ""
"For :class:`~odoo.fields.Selection`, the value should match the selection"
" values (generally :class:`python:str`, sometimes :class:`python:int`)"
msgstr ""

#: odoo.models.Model.write:23 of
msgid ""
"For :class:`~odoo.fields.Many2one`, the value should be the database "
"identifier of the record to set"
msgstr ""

#: odoo.models.Model.write:25 of
msgid "Other non-relational fields use a string for value"
msgstr ""

#: odoo.models.Model.write:29 of
msgid ""
"for historical and compatibility reasons, :class:`~odoo.fields.Date` and "
":class:`~odoo.fields.Datetime` fields use strings as values (written and "
"read) rather than :class:`~python:datetime.date` or "
":class:`~python:datetime.datetime`. These date strings are UTC-only and "
"formatted according to "
":const:`odoo.tools.misc.DEFAULT_SERVER_DATE_FORMAT` and "
":const:`odoo.tools.misc.DEFAULT_SERVER_DATETIME_FORMAT`"
msgstr ""

#: odoo.models.Model.write:39 of
msgid ""
":class:`~odoo.fields.One2many` and :class:`~odoo.fields.Many2many` use a "
"special \"commands\" format to manipulate the set of records stored "
"in/associated with the field."
msgstr ""

#: odoo.models.Model.write:43 of
msgid ""
"This format is a list of triplets executed sequentially, where each "
"triplet is a command to execute on the set of records. Not all commands "
"apply in all situations. Possible commands are:"
msgstr ""

#: odoo.models.Model.write:47 of
msgid "``(0, 0, values)``"
msgstr ""

#: odoo.models.Model.write:48 of
msgid "adds a new record created from the provided ``value`` dict."
msgstr ""

#: odoo.models.Model.write:50 of
msgid "``(1, id, values)``"
msgstr ""

#: odoo.models.Model.write:50 of
msgid ""
"updates an existing record of id ``id`` with the values in ``values``. "
"Can not be used in :meth:`~.create`."
msgstr ""

#: odoo.models.Model.write:53 of
msgid "``(2, id, 0)``"
msgstr ""

#: odoo.models.Model.write:53 of
msgid ""
"removes the record of id ``id`` from the set, then deletes it (from the "
"database). Can not be used in :meth:`~.create`."
msgstr ""

#: odoo.models.Model.write:57 of
msgid "``(3, id, 0)``"
msgstr ""

#: odoo.models.Model.write:56 of
msgid ""
"removes the record of id ``id`` from the set, but does not delete it. Can"
" not be used in :meth:`~.create`."
msgstr ""

#: odoo.models.Model.write:59 of
msgid "``(4, id, 0)``"
msgstr ""

#: odoo.models.Model.write:60 of
msgid "adds an existing record of id ``id`` to the set."
msgstr ""

#: odoo.models.Model.write:63 of
msgid "``(5, 0, 0)``"
msgstr ""

#: odoo.models.Model.write:62 of
msgid ""
"removes all records from the set, equivalent to using the command ``3`` "
"on every record explicitly. Can not be used in :meth:`~.create`."
msgstr ""

#: odoo.models.Model.write:67 of
msgid "``(6, 0, ids)``"
msgstr ""

#: odoo.models.Model.write:66 of
msgid ""
"replaces all existing records in the set by the ``ids`` list, equivalent "
"to using the command ``5`` followed by a command ``4`` for each ``id`` in"
" ``ids``."
msgstr ""

#: odoo.models.Model.flush:1 of
msgid ""
"Process all the pending recomputations (or at least the given field names"
" `fnames` if present) and flush the pending updates to the database."
msgstr ""

#: ../../reference/orm.rst:665
msgid "Search/Read"
msgstr ""

#: odoo.models.Model.browse:1 of
msgid ""
"Returns a recordset for the ids provided as parameter in the current "
"environment."
msgstr ""

#: odoo.models.Model.browse:9 of
msgid "id(s)"
msgstr ""

#: odoo.models.Model.browse:11 of
msgid "recordset"
msgstr ""

#: odoo.models.Model.search:1 of
msgid ""
"Searches for records based on the ``args`` :ref:`search domain "
"<reference/orm/domains>`."
msgstr ""

#: odoo.models.Model.read_group:3 odoo.models.Model.search:4 of
msgid ""
":ref:`A search domain <reference/orm/domains>`. Use an empty list to "
"match all records."
msgstr ""

#: odoo.models.Model.search:6 of
msgid "number of results to ignore (default: none)"
msgstr ""

#: odoo.models.Model.search:7 of
msgid "maximum number of records to return (default: all)"
msgstr ""

#: odoo.models.Model.search:8 of
msgid "sort string"
msgstr ""

#: odoo.models.Model.search:9 of
msgid ""
"if True, only counts and returns the number of matching records (default:"
" False)"
msgstr ""

#: odoo.models.Model.search:10 of
msgid "at most ``limit`` records matching the search criteria"
msgstr ""

#: odoo.models.Model.search:12 of
msgid "* if user tries to bypass access rules for read on the requested object."
msgstr ""

#: odoo.models.Model.search:12 of
msgid "if user tries to bypass access rules for read on the requested object."
msgstr ""

#: odoo.models.Model.search_count:1 of
msgid ""
"Returns the number of records in the current model matching :ref:`the "
"provided domain <reference/orm/domains>`."
msgstr ""

#: odoo.models.Model.name_search:1 of
msgid ""
"Search for records that have a display name matching the given ``name`` "
"pattern when compared with the given ``operator``, while also matching "
"the optional search domain (``args``)."
msgstr ""

#: odoo.models.Model.name_search:5 of
msgid ""
"This is used for example to provide suggestions based on a partial value "
"for a relational field. Sometimes be seen as the inverse function of "
":meth:`~.name_get`, but it is not guaranteed to be."
msgstr ""

#: odoo.models.Model.name_search:9 of
msgid ""
"This method is equivalent to calling :meth:`~.search` with a search "
"domain based on ``display_name`` and then :meth:`~.name_get` on the "
"result of the search."
msgstr ""

#: odoo.models.Model.name_search:13 of
msgid "the name pattern to match"
msgstr ""

#: odoo.models.Model.name_search:14 of
msgid ""
"optional search domain (see :meth:`~.search` for syntax), specifying "
"further restrictions"
msgstr ""

#: odoo.models.Model.name_search:16 of
msgid "domain operator for matching ``name``, such as ``'like'`` or ``'='``."
msgstr ""

#: odoo.models.Model.name_search:18 odoo.models.Model.read_group:18 of
msgid "optional max number of records to return"
msgstr ""

#: odoo.models.Model.name_search:20 of
msgid "list of pairs ``(id, text_repr)`` for all matching records."
msgstr ""

#: odoo.models.Model.read:1 of
msgid ""
"Reads the requested fields for the records in ``self``, low-level/RPC "
"method. In Python code, prefer :meth:`~.browse`."
msgstr ""

#: odoo.models.Model.read:4 of
msgid "list of field names to return (default is all fields)"
msgstr ""

#: odoo.models.Model.read:5 of
msgid ""
"a list of dictionaries mapping field names to their values, with one "
"dictionary per record"
msgstr ""

#: odoo.models.Model.read:7 of
msgid "if user has no read rights on some of the given records"
msgstr ""

#: odoo.models.Model.read_group:1 of
msgid ""
"Get the list of records in list view grouped by the given ``groupby`` "
"fields."
msgstr ""

#: odoo.models.Model.read_group:5 of
msgid ""
"list of fields present in the list view specified on the object. Each "
"element is either 'field' (field name, using the default aggregation), or"
" 'field:agg' (aggregate field with aggregation function 'agg'), or "
"'name:agg(field)' (aggregate field with 'agg' and return it as 'name'). "
"The possible aggregation functions are the ones provided by PostgreSQL "
"(https://www.postgresql.org/docs/current/static/functions-aggregate.html)"
" and 'count_distinct', with the expected meaning."
msgstr ""

#: odoo.models.Model.read_group:12 of
msgid ""
"list of groupby descriptions by which the records will be grouped.   A "
"groupby description is either a field (then it will be grouped by that "
"field) or a string 'field:groupby_function'.  Right now, the only "
"functions supported are 'day', 'week', 'month', 'quarter' or 'year', and "
"they only make sense for  date/datetime fields."
msgstr ""

#: odoo.models.Model.read_group:17 of
msgid "optional number of records to skip"
msgstr ""

#: odoo.models.Model.read_group:19 of
msgid ""
"optional ``order by`` specification, for overriding the natural sort "
"ordering of the groups, see also :py:meth:`~osv.osv.osv.search` "
"(supported only for many2one fields currently)"
msgstr ""

#: odoo.models.Model.read_group:23 of
msgid ""
"if true, the results are only grouped by the first groupby and the  "
"remaining groupbys are put in the __context key.  If false, all the "
"groupbys are done in one call."
msgstr ""

#: odoo.models.Model.read_group:26 of
msgid ""
"list of dictionaries(one dictionary for each record) containing:  * the "
"values of fields grouped by the fields in ``groupby`` argument * "
"__domain: list of tuples specifying the search criteria * __context: "
"dictionary with argument like ``groupby``"
msgstr ""

#: odoo.models.Model.read_group:26 of
msgid "list of dictionaries(one dictionary for each record) containing:"
msgstr ""

#: odoo.models.Model.read_group:28 of
msgid "the values of fields grouped by the fields in ``groupby`` argument"
msgstr ""

#: odoo.models.Model.read_group:29 of
msgid "__domain: list of tuples specifying the search criteria"
msgstr ""

#: odoo.models.Model.read_group:30 of
msgid "__context: dictionary with argument like ``groupby``"
msgstr ""

#: odoo.models.Model.read_group:32 of
msgid ""
"* if user has no read rights on the requested object * if user tries to "
"bypass access rules for read on the requested object"
msgstr ""

#: odoo.models.Model.read_group:32 of
msgid "if user has no read rights on the requested object"
msgstr ""

#: odoo.models.Model.read_group:33 of
msgid "if user tries to bypass access rules for read on the requested object"
msgstr ""

#: ../../reference/orm.rst:680
msgid "Fields/Views"
msgstr ""

#: odoo.models.Model.fields_get:1 of
msgid "Return the definition of each field."
msgstr ""

#: odoo.models.Model.fields_get:3 of
msgid ""
"The returned value is a dictionary (indexed by field name) of "
"dictionaries. The _inherits'd fields are included. The string, help, and "
"selection (if present) attributes are translated."
msgstr ""

#: odoo.models.Model.fields_get:7 of
msgid "list of fields to document, all if empty or not provided"
msgstr ""

#: odoo.models.Model.fields_get:8 of
msgid ""
"list of description attributes to return for each field, all if empty or "
"not provided"
msgstr ""

#: odoo.models.Model.fields_view_get:1 of
msgid ""
"Get the detailed composition of the requested view like fields, model, "
"view architecture"
msgstr ""

#: odoo.models.Model.fields_view_get:3 of
msgid "id of the view or None"
msgstr ""

#: odoo.models.Model.fields_view_get:4 of
msgid "type of the view to return if view_id is None ('form', 'tree', ...)"
msgstr ""

#: odoo.models.Model.fields_view_get:5 of
msgid "true to include contextual actions"
msgstr ""

#: odoo.models.Model.fields_view_get:6 of
msgid "deprecated"
msgstr ""

#: odoo.models.Model.fields_view_get:7 of
msgid ""
"composition of the requested view (including inherited views and "
"extensions)"
msgstr ""

#: odoo.models.Model.fields_view_get:9 of
msgid ""
"* if the inherited view has unknown position to work with other than "
"'before', 'after', 'inside', 'replace' * if some tag other than "
"'position' is found in parent view"
msgstr ""

#: odoo.models.Model.fields_view_get:10 of
msgid ""
"if the inherited view has unknown position to work with other than "
"'before', 'after', 'inside', 'replace'"
msgstr ""

#: odoo.models.Model.fields_view_get:11 of
msgid "if some tag other than 'position' is found in parent view"
msgstr ""

#: odoo.models.Model.fields_view_get:12 of
msgid ""
"if there is view type other than form, tree, calendar, search etc defined"
" on the structure"
msgstr ""

#: ../../reference/orm.rst:689
msgid "Search domains"
msgstr ""

#: ../../reference/orm.rst:691
msgid ""
"A domain is a list of criteria, each criterion being a triple (either a "
"``list`` or a ``tuple``) of ``(field_name, operator, value)`` where:"
msgstr ""

#: ../../reference/orm.rst:697
msgid "``field_name`` (``str``)"
msgstr ""

#: ../../reference/orm.rst:695
msgid ""
"a field name of the current model, or a relationship traversal through a "
":class:`~odoo.fields.Many2one` using dot-notation e.g. ``'street'`` or "
"``'partner_id.country'``"
msgstr ""

#: ../../reference/orm.rst:751
msgid "``operator`` (``str``)"
msgstr ""

#: ../../reference/orm.rst:700
msgid ""
"an operator used to compare the ``field_name`` with the ``value``. Valid "
"operators are:"
msgstr ""

#: ../../reference/orm.rst:703
msgid "``=``"
msgstr ""

#: ../../reference/orm.rst:704
msgid "equals to"
msgstr ""

#: ../../reference/orm.rst:705
msgid "``!=``"
msgstr ""

#: ../../reference/orm.rst:706
msgid "not equals to"
msgstr ""

#: ../../reference/orm.rst:707
msgid "``>``"
msgstr ""

#: ../../reference/orm.rst:708
msgid "greater than"
msgstr ""

#: ../../reference/orm.rst:709
msgid "``>=``"
msgstr ""

#: ../../reference/orm.rst:710
msgid "greater than or equal to"
msgstr ""

#: ../../reference/orm.rst:711
msgid "``<``"
msgstr ""

#: ../../reference/orm.rst:712
msgid "less than"
msgstr ""

#: ../../reference/orm.rst:713
msgid "``<=``"
msgstr ""

#: ../../reference/orm.rst:714
msgid "less than or equal to"
msgstr ""

#: ../../reference/orm.rst:716
msgid "``=?``"
msgstr ""

#: ../../reference/orm.rst:716
msgid ""
"unset or equals to (returns true if ``value`` is either ``None`` or "
"``False``, otherwise behaves like ``=``)"
msgstr ""

#: ../../reference/orm.rst:720
msgid "``=like``"
msgstr ""

#: ../../reference/orm.rst:719
msgid ""
"matches ``field_name`` against the ``value`` pattern. An underscore ``_``"
" in the pattern stands for (matches) any single character; a percent sign"
" ``%`` matches any string of zero or more characters."
msgstr ""

#: ../../reference/orm.rst:723
msgid "``like``"
msgstr ""

#: ../../reference/orm.rst:723
msgid ""
"matches ``field_name`` against the ``%value%`` pattern. Similar to "
"``=like`` but wraps ``value`` with '%' before matching"
msgstr ""

#: ../../reference/orm.rst:725
msgid "``not like``"
msgstr ""

#: ../../reference/orm.rst:726
msgid "doesn't match against the ``%value%`` pattern"
msgstr ""

#: ../../reference/orm.rst:727
msgid "``ilike``"
msgstr ""

#: ../../reference/orm.rst:728
msgid "case insensitive ``like``"
msgstr ""

#: ../../reference/orm.rst:729
msgid "``not ilike``"
msgstr ""

#: ../../reference/orm.rst:730
msgid "case insensitive ``not like``"
msgstr ""

#: ../../reference/orm.rst:731
msgid "``=ilike``"
msgstr ""

#: ../../reference/orm.rst:732
msgid "case insensitive ``=like``"
msgstr ""

#: ../../reference/orm.rst:734
msgid "``in``"
msgstr ""

#: ../../reference/orm.rst:734
msgid ""
"is equal to any of the items from ``value``, ``value`` should be a list "
"of items"
msgstr ""

#: ../../reference/orm.rst:736
msgid "``not in``"
msgstr ""

#: ../../reference/orm.rst:737
msgid "is unequal to all of the items from ``value``"
msgstr ""

#: ../../reference/orm.rst:743
msgid "``child_of``"
msgstr ""

#: ../../reference/orm.rst:739
msgid ""
"is a child (descendant) of a ``value`` record (value can be either one "
"item or a list of items)."
msgstr ""

#: ../../reference/orm.rst:742 ../../reference/orm.rst:749
msgid ""
"Takes the semantics of the model into account (i.e following the "
"relationship field named by :attr:`~odoo.models.Model._parent_name`)."
msgstr ""

#: ../../reference/orm.rst:751
msgid "``parent_of``"
msgstr ""

#: ../../reference/orm.rst:746
msgid ""
"is a parent (ascendant) of a ``value`` record (value can be either one "
"item or a list of items)."
msgstr ""

#: ../../reference/orm.rst:755
msgid "``value``"
msgstr ""

#: ../../reference/orm.rst:754
msgid ""
"variable type, must be comparable (through ``operator``) to the named "
"field."
msgstr ""

#: ../../reference/orm.rst:757
msgid "Domain criteria can be combined using logical operators in *prefix* form:"
msgstr ""

#: ../../reference/orm.rst:760
msgid "``'&'``"
msgstr ""

#: ../../reference/orm.rst:760
msgid ""
"logical *AND*, default operation to combine criteria following one "
"another. Arity 2 (uses the next 2 criteria or combinations)."
msgstr ""

#: ../../reference/orm.rst:762
msgid "``'|'``"
msgstr ""

#: ../../reference/orm.rst:763
msgid "logical *OR*, arity 2."
msgstr ""

#: ../../reference/orm.rst:769
msgid "``'!'``"
msgstr ""

#: ../../reference/orm.rst:765
msgid "logical *NOT*, arity 1."
msgstr ""

#: ../../reference/orm.rst:767
msgid ""
"Mostly to negate combinations of criteria Individual criterion generally "
"have a negative form (e.g. ``=`` -> ``!=``, ``<`` -> ``>=``) which is "
"simpler than negating the positive."
msgstr ""

#: ../../reference/orm.rst:773
msgid ""
"To search for partners named *ABC*, from belgium or germany, whose "
"language is not english::"
msgstr ""

#: ../../reference/orm.rst:781
msgid "This domain is interpreted as:"
msgstr ""

#: ../../reference/orm.rst:790
msgid "Unlink"
msgstr ""

#: odoo.models.Model.unlink:1 of
msgid "Deletes the records of the current set"
msgstr ""

#: odoo.models.Model.unlink:3 of
msgid ""
"* if user has no unlink rights on the requested object * if user tries to"
" bypass access rules for unlink on the requested object"
msgstr ""

#: odoo.models.Model.unlink:3 of
msgid "if user has no unlink rights on the requested object"
msgstr ""

#: odoo.models.Model.unlink:4 of
msgid "if user tries to bypass access rules for unlink on the requested object"
msgstr ""

#: odoo.models.Model.unlink:5 of
msgid "if the record is default property for other records"
msgstr ""

#: ../../reference/orm.rst:797
msgid "Record(set) information"
msgstr ""

#: odoo.models.Model.ids:1 of
msgid "Return the list of actual record ids corresponding to ``self``."
msgstr ""

#: ../../reference/orm.rst:803
msgid "Returns the environment of the given recordset."
msgstr ""

#: ../../reference/orm.rst:805
msgid ":class:`~odoo.api.Environment`"
msgstr ""

#: odoo.models.Model.exists:1 of
msgid ""
"Returns the subset of records in ``self`` that exist, and marks deleted "
"records as such in cache. It can be used as a test on records::"
msgstr ""

#: odoo.models.Model.exists:7 of
msgid "By convention, new records are returned as existing."
msgstr ""

#: odoo.models.Model.ensure_one:1 of
msgid "Verify that the current recorset holds a single record."
msgstr ""

#: odoo.models.Model.ensure_one:3 of
msgid "``len(self) != 1``"
msgstr ""

#: odoo.models.Model.name_get:1 of
msgid ""
"Returns a textual representation for the records in ``self``. By default "
"this is the value of the ``display_name`` field."
msgstr ""

#: odoo.models.Model.name_get:4 of
msgid "list of pairs ``(id, text_repr)`` for each records"
msgstr ""

#: odoo.models.Model.get_metadata:1 of
msgid "Return some metadata about the given records."
msgstr ""

#: odoo.models.Model.get_metadata:3 of
msgid "list of ownership dictionaries for each requested record"
msgstr ""

#: odoo.models.Model.get_metadata:4 of
msgid ""
"list of dictionaries with the following keys:  * id: object id * "
"create_uid: user who created the record * create_date: date when the "
"record was created * write_uid: last user who changed the record * "
"write_date: date of the last change to the record * xmlid: XML ID to use "
"to refer to this record (if there is one), in format ``module.name`` * "
"noupdate: A boolean telling if the record will be updated or not"
msgstr ""

#: odoo.models.Model.get_metadata:4 of
msgid "list of dictionaries with the following keys:"
msgstr ""

#: odoo.models.Model.get_metadata:6 of
msgid "id: object id"
msgstr ""

#: odoo.models.Model.get_metadata:7 of
msgid "create_uid: user who created the record"
msgstr ""

#: odoo.models.Model.get_metadata:8 of
msgid "create_date: date when the record was created"
msgstr ""

#: odoo.models.Model.get_metadata:9 of
msgid "write_uid: last user who changed the record"
msgstr ""

#: odoo.models.Model.get_metadata:10 of
msgid "write_date: date of the last change to the record"
msgstr ""

#: odoo.models.Model.get_metadata:11 of
msgid ""
"xmlid: XML ID to use to refer to this record (if there is one), in format"
" ``module.name``"
msgstr ""

#: odoo.models.Model.get_metadata:12 of
msgid "noupdate: A boolean telling if the record will be updated or not"
msgstr ""

#: ../../reference/orm.rst:820
msgid "Operations"
msgstr ""

#: ../../reference/orm.rst:822
msgid ""
"Recordsets are immutable, but sets of the same model can be combined "
"using various set operations, returning new recordsets."
msgstr ""

#: ../../reference/orm.rst:827
msgid ""
"``record in set`` returns whether ``record`` (which must be a 1-element "
"recordset) is present in ``set``. ``record not in set`` is the inverse "
"operation"
msgstr ""

#: ../../reference/orm.rst:830
msgid ""
"``set1 <= set2`` and ``set1 < set2`` return whether ``set1`` is a subset "
"of ``set2`` (resp. strict)"
msgstr ""

#: ../../reference/orm.rst:832
msgid ""
"``set1 >= set2`` and ``set1 > set2`` return whether ``set1`` is a "
"superset of ``set2`` (resp. strict)"
msgstr ""

#: ../../reference/orm.rst:834
msgid ""
"``set1 | set2`` returns the union of the two recordsets, a new recordset "
"containing all records present in either source"
msgstr ""

#: ../../reference/orm.rst:836
msgid ""
"``set1 & set2`` returns the intersection of two recordsets, a new "
"recordset containing only records present in both sources"
msgstr ""

#: ../../reference/orm.rst:838
msgid ""
"``set1 - set2`` returns a new recordset containing only records of "
"``set1`` which are *not* in ``set2``"
msgstr ""

#: ../../reference/orm.rst:841
msgid ""
"Recordsets are iterable so the usual Python tools are available for "
"transformation (:func:`python:map`, :func:`python:sorted`, "
":func:`~python:itertools.ifilter`, ...) however these return either a "
":class:`python:list` or an :term:`python:iterator`, removing the ability "
"to call methods on their result, or to use set operations."
msgstr ""

#: ../../reference/orm.rst:847
msgid ""
"Recordsets therefore provide the following operations returning "
"recordsets themselves (when possible):"
msgstr ""

#: ../../reference/orm.rst:851
msgid "Filter"
msgstr ""

#: odoo.models.Model.filtered:1 of
msgid "Return the records in ``self`` satisfying ``func``."
msgstr ""

#: odoo.models.Model.filtered:3 odoo.models.Model.mapped:5 of
msgid "a function or a dot-separated sequence of field names"
msgstr ""

#: odoo.models.Model.filtered:5 of
msgid "recordset of records satisfying func, may be empty."
msgstr ""

#: ../../reference/orm.rst:858
msgid "Map"
msgstr ""

#: odoo.models.Model.mapped:1 of
msgid ""
"Apply ``func`` on all records in ``self``, and return the result as a "
"list or a recordset (if ``func`` return recordsets). In the latter case, "
"the order of the returned recordset is arbitrary."
msgstr ""

#: odoo.models.Model.mapped:7 of
msgid "self if func is falsy, result of func applied to all ``self`` records."
msgstr ""

#: odoo.models.Model.mapped:15 of
msgid "The provided function can be a string to get field values:"
msgstr ""

#: ../../reference/orm.rst:863
msgid "Sort"
msgstr ""

#: odoo.models.Model.sorted:1 of
msgid "Return the recordset ``self`` ordered by ``key``."
msgstr ""

#: odoo.models.Model.sorted:3 of
msgid ""
"either a function of one argument that returns a comparison key for each "
"record, or a field name, or ``None``, in which case records are ordered "
"according the default model's order"
msgstr ""

#: odoo.models.Model.sorted:7 of
msgid "if ``True``, return the result in reverse order"
msgstr ""

#: ../../reference/orm.rst:870
msgid "Inheritance and extension"
msgstr ""

#: ../../reference/orm.rst:872
msgid ""
"Odoo provides three different mechanisms to extend models in a modular "
"way:"
msgstr ""

#: ../../reference/orm.rst:874
msgid ""
"creating a new model from an existing one, adding new information to the "
"copy but leaving the original module as-is"
msgstr ""

#: ../../reference/orm.rst:876
msgid ""
"extending models defined in other modules in-place, replacing the "
"previous version"
msgstr ""

#: ../../reference/orm.rst:878
msgid "delegating some of the model's fields to records it contains"
msgstr ""

#: ../../reference/orm.rst:884
msgid "Classical inheritance"
msgstr ""

#: ../../reference/orm.rst:886
msgid ""
"When using the :attr:`~odoo.models.Model._inherit` and "
":attr:`~odoo.models.Model._name` attributes together, Odoo creates a new "
"model using the existing one (provided via "
":attr:`~odoo.models.Model._inherit`) as a base. The new model gets all "
"the fields, methods and meta-information (defaults & al) from its base."
msgstr ""

#: ../../reference/orm.rst:896
msgid "and using them:"
msgstr ""

#: ../../reference/orm.rst:902 ../../reference/orm.rst:929
msgid "will yield:"
msgstr ""

#: ../../reference/orm.rst:908
msgid ""
"the second model has inherited from the first model's ``check`` method "
"and its ``name`` field, but overridden the ``call`` method, as when using"
" standard :ref:`Python inheritance <python:tut-inheritance>`."
msgstr ""

#: ../../reference/orm.rst:913
msgid "Extension"
msgstr ""

#: ../../reference/orm.rst:915
msgid ""
"When using :attr:`~odoo.models.Model._inherit` but leaving out "
":attr:`~odoo.models.Model._name`, the new model replaces the existing "
"one, essentially extending it in-place. This is useful to add new fields "
"or methods to existing models (created in other modules), or to customize"
" or reconfigure them (e.g. to change their default sort order):"
msgstr ""

#: ../../reference/orm.rst:935
msgid ""
"it will also yield the various :ref:`automatic fields "
"<reference/fields/automatic>` unless they've been disabled"
msgstr ""

#: ../../reference/orm.rst:939
msgid "Delegation"
msgstr ""

#: ../../reference/orm.rst:941
msgid ""
"The third inheritance mechanism provides more flexibility (it can be "
"altered at runtime) but less power: using the "
":attr:`~odoo.models.Model._inherits` a model *delegates* the lookup of "
"any field not found on the current model to \"children\" models. The "
"delegation is performed via :class:`~odoo.fields.Reference` fields "
"automatically set up on the parent model."
msgstr ""

#: ../../reference/orm.rst:948
msgid ""
"The main difference is in the meaning. When using Delegation, the model "
"**has one** instead of **is one**, turning the relationship in a "
"composition instead of inheritance:"
msgstr ""

#: ../../reference/orm.rst:960
msgid "will result in:"
msgstr ""

#: ../../reference/orm.rst:966
msgid "and it's possible to write directly on the delegated field:"
msgstr ""

#: ../../reference/orm.rst:972
msgid ""
"when using delegation inheritance, methods are *not* inherited, only "
"fields"
msgstr ""

#: ../../reference/orm.rst:976
msgid "Fields Incremental Definition"
msgstr ""

#: ../../reference/orm.rst:978
msgid ""
"A field is defined as class attribute on a model class. If the model is "
"extended, one can also extend the field definition by redefining a field "
"with the same name and same type on the subclass. In that case, the "
"attributes of the field are taken from the parent class and overridden by"
" the ones given in subclasses."
msgstr ""

#: ../../reference/orm.rst:984
msgid ""
"For instance, the second class below only adds a tooltip on the field "
"``state``::"
msgstr ""

#: ../../reference/orm.rst:998
msgid "Error management"
msgstr ""

#: odoo.exceptions:1 of
msgid "The Odoo Exceptions module defines a few core exception types."
msgstr ""

#: odoo.exceptions:3 of
msgid ""
"Those types are understood by the RPC layer. Any other exception type "
"bubbling until the RPC layer will be treated as a 'Server error'."
msgstr ""

#: odoo.exceptions:8 of
msgid ""
"If you consider introducing new exceptions, check out the "
":mod:`odoo.addons.test_exceptions` module."
msgstr ""

#: odoo.exceptions.AccessDenied:1 of
msgid "Login/password error."
msgstr ""

#: odoo.exceptions.AccessDenied:5 of
msgid "No traceback."
msgstr ""

#: odoo.exceptions.AccessDenied:9 of
msgid "When you try to log with a wrong password."
msgstr ""

#: odoo.exceptions.AccessError:1 of
msgid "Access rights error."
msgstr ""

#: odoo.exceptions.AccessError:5 of
msgid "When you try to read a record that you are not allowed to."
msgstr ""

#: odoo.exceptions.CacheMiss:1 of
msgid "Missing value(s) in cache."
msgstr ""

#: odoo.exceptions.CacheMiss:5 of
msgid "When you try to read a value in a flushed cache."
msgstr ""

#: odoo.exceptions.MissingError:1 of
msgid "Missing record(s)."
msgstr ""

#: odoo.exceptions.MissingError:5 of
msgid "When you try to write on a deleted record."
msgstr ""

#: odoo.exceptions.RedirectWarning:1 of
msgid ""
"Warning with a possibility to redirect the user instead of simply "
"displaying the warning message."
msgstr ""

#: odoo.exceptions.RedirectWarning:4 of
msgid "id of the action where to perform the redirection"
msgstr ""

#: odoo.exceptions.RedirectWarning:5 of
msgid "text to put on the button that will trigger the redirection."
msgstr ""

#: odoo.exceptions.UserError:1 of
msgid "Generic error managed by the client."
msgstr ""

#: odoo.exceptions.UserError:3 of
msgid ""
"Typically when the user tries to do something that has no sense given the"
" current state of a record."
msgstr ""

#: odoo.exceptions.ValidationError:1 of
msgid "Violation of python constraints."
msgstr ""

#: odoo.exceptions.ValidationError:5 of
msgid ""
"When you try to create a new user with a login which already exist in the"
" db."
msgstr ""

